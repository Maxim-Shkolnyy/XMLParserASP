// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using xmlParserASP.Presistant;

#nullable disable

namespace xmlParserASP.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20230710145808_CatAttrTables1")]
    partial class CatAttrTables1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyAttributeSupplierAttribute", b =>
                {
                    b.Property<int>("MyAttributesMyAttrId")
                        .HasColumnType("int")
                        .HasColumnName("myAttributesMyAttrId");

                    b.Property<int>("SupplierAttributesSupAttrId")
                        .HasColumnType("int")
                        .HasColumnName("supplierAttributesSupAttrId");

                    b.HasKey("MyAttributesMyAttrId", "SupplierAttributesSupAttrId")
                        .HasName("pK_MyAttributesSupplierAttributes");

                    b.HasIndex("SupplierAttributesSupAttrId")
                        .HasDatabaseName("iX_MyAttributesSupplierAttributes_supplierAttributesSupAttrId");

                    b.ToTable("MyAttributesSupplierAttributes", (string)null);
                });

            modelBuilder.Entity("MyCategorySupplierCategory", b =>
                {
                    b.Property<int>("MyCategoriesMyCatId")
                        .HasColumnType("int")
                        .HasColumnName("myCategoriesMyCatId");

                    b.Property<int>("SupplierCategoriesSupplierCatId")
                        .HasColumnType("int")
                        .HasColumnName("supplierCategoriesSupplierCatId");

                    b.HasKey("MyCategoriesMyCatId", "SupplierCategoriesSupplierCatId")
                        .HasName("pK_MyCategoriesSupplierCategories");

                    b.HasIndex("SupplierCategoriesSupplierCatId")
                        .HasDatabaseName("iX_MyCategoriesSupplierCategories_supplierCategoriesSupplierCat~");

                    b.ToTable("MyCategoriesSupplierCategories", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.MyAttribute", b =>
                {
                    b.Property<int>("MyAttrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("myAttrId");

                    b.Property<int?>("MyAttrGroup")
                        .HasColumnType("int")
                        .HasColumnName("myAttrGroup");

                    b.Property<string>("MyAttrNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("myAttrNameRU");

                    b.Property<string>("MyAttrNameUA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("myAttrNameUA");

                    b.HasKey("MyAttrId")
                        .HasName("pK_myAttributes");

                    b.ToTable("myAttributes", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.MyCategory", b =>
                {
                    b.Property<int>("MyCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("myCatId");

                    b.Property<string>("MyCatNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("myCatNameRU");

                    b.Property<string>("MyCatNameUA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("myCatNameUA");

                    b.Property<int>("MyParentCatId")
                        .HasColumnType("int")
                        .HasColumnName("myParentCatId");

                    b.HasKey("MyCatId")
                        .HasName("pK_myCategories");

                    b.ToTable("myCategories", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<string>("DateAdded")
                        .HasColumnType("longtext")
                        .HasColumnName("dateAdded");

                    b.Property<string>("DateAvailable")
                        .HasColumnType("longtext")
                        .HasColumnName("dateAvailable");

                    b.Property<string>("DateModified")
                        .HasColumnType("longtext")
                        .HasColumnName("dateModified");

                    b.Property<string>("DescriptionRU")
                        .HasColumnType("longtext")
                        .HasColumnName("descriptionRU");

                    b.Property<string>("DescriptionUA")
                        .HasColumnType("longtext")
                        .HasColumnName("descriptionUA");

                    b.Property<string>("ImageName")
                        .HasColumnType("longtext")
                        .HasColumnName("imageName");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext")
                        .HasColumnName("manufacturer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("model");

                    b.Property<int>("MyCatId")
                        .HasColumnType("int")
                        .HasColumnName("myCatId");

                    b.Property<float>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<string>("ProductNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("productNameRU");

                    b.Property<string>("ProductNameUA")
                        .HasColumnType("longtext")
                        .HasColumnName("productNameUA");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("SeoKeyword")
                        .HasColumnType("longtext")
                        .HasColumnName("seoKeyword");

                    b.Property<int?>("Sku")
                        .HasColumnType("int")
                        .HasColumnName("sku");

                    b.Property<bool?>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplierId");

                    b.HasKey("ProductId")
                        .HasName("pK_products");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplierId");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("supplierName");

                    b.HasKey("SupplierId")
                        .HasName("pK_suppliers");

                    b.ToTable("suppliers", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.SupplierAttribute", b =>
                {
                    b.Property<int>("SupAttrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supAttrId");

                    b.Property<string>("SupAttrNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("supAttrNameRU");

                    b.Property<string>("SupAttrNameUA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("supAttrNameUA");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplierId");

                    b.HasKey("SupAttrId")
                        .HasName("pK_supplierAttributes");

                    b.ToTable("supplierAttributes", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.SupplierCategory", b =>
                {
                    b.Property<int>("SupplierCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplierCatId");

                    b.Property<string>("CatNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("catNameRU");

                    b.Property<string>("CatNameUA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("catNameUA");

                    b.Property<int>("ParentSupCatId")
                        .HasColumnType("int")
                        .HasColumnName("parentSupCatId");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplierId");

                    b.HasKey("SupplierCatId")
                        .HasName("pK_supplierCategories");

                    b.ToTable("supplierCategories", (string)null);
                });

            modelBuilder.Entity("MyAttributeSupplierAttribute", b =>
                {
                    b.HasOne("xmlParserASP.Entities.MyAttribute", null)
                        .WithMany()
                        .HasForeignKey("MyAttributesMyAttrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_MyAttributesSupplierAttributes_myAttributes_myAttributesMyAt~");

                    b.HasOne("xmlParserASP.Entities.SupplierAttribute", null)
                        .WithMany()
                        .HasForeignKey("SupplierAttributesSupAttrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_MyAttributesSupplierAttributes_supplierAttributes_supplierAt~");
                });

            modelBuilder.Entity("MyCategorySupplierCategory", b =>
                {
                    b.HasOne("xmlParserASP.Entities.MyCategory", null)
                        .WithMany()
                        .HasForeignKey("MyCategoriesMyCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_MyCategoriesSupplierCategories_myCategories_myCategoriesMyCa~");

                    b.HasOne("xmlParserASP.Entities.SupplierCategory", null)
                        .WithMany()
                        .HasForeignKey("SupplierCategoriesSupplierCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_MyCategoriesSupplierCategories_supplierCategories_supplierCa~");
                });
#pragma warning restore 612, 618
        }
    }
}
