// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using xmlParserASP.Presistant;

#nullable disable

namespace xmlParserASP.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20230710153600_CatAttrTables1")]
    partial class CatAttrTables1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyAttributeSupplierAttribute", b =>
                {
                    b.Property<int>("MyAttributesMyAttrId")
                        .HasColumnType("int")
                        .HasColumnName("my_attributes_my_attr_id");

                    b.Property<int>("SupplierAttributesSupAttrId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_attributes_sup_attr_id");

                    b.HasKey("MyAttributesMyAttrId", "SupplierAttributesSupAttrId")
                        .HasName("pk_my_attributes_supplier_attributes");

                    b.HasIndex("SupplierAttributesSupAttrId")
                        .HasDatabaseName("ix_my_attributes_supplier_attributes_supplier_attributes_sup_at");

                    b.ToTable("my_attributes_supplier_attributes", (string)null);
                });

            modelBuilder.Entity("MyCategorySupplierCategory", b =>
                {
                    b.Property<int>("MyCategoriesMyCatId")
                        .HasColumnType("int")
                        .HasColumnName("my_categories_my_cat_id");

                    b.Property<int>("SupplierCategoriesSupplierCatId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_categories_supplier_cat_id");

                    b.HasKey("MyCategoriesMyCatId", "SupplierCategoriesSupplierCatId")
                        .HasName("pk_my_categories_supplier_categories");

                    b.HasIndex("SupplierCategoriesSupplierCatId")
                        .HasDatabaseName("ix_my_categories_supplier_categories_supplier_categories_suppli");

                    b.ToTable("my_categories_supplier_categories", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.MyAttribute", b =>
                {
                    b.Property<int>("MyAttrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("my_attr_id");

                    b.Property<int?>("MyAttrGroup")
                        .HasColumnType("int")
                        .HasColumnName("my_attr_group");

                    b.Property<string>("MyAttrNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("my_attr_name_ru");

                    b.Property<string>("MyAttrNameUA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("my_attr_name_ua");

                    b.HasKey("MyAttrId")
                        .HasName("pk_my_attributes");

                    b.ToTable("my_attributes", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.MyCategory", b =>
                {
                    b.Property<int>("MyCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("my_cat_id");

                    b.Property<string>("MyCatNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("my_cat_name_ru");

                    b.Property<string>("MyCatNameUA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("my_cat_name_ua");

                    b.Property<int>("MyParentCatId")
                        .HasColumnType("int")
                        .HasColumnName("my_parent_cat_id");

                    b.HasKey("MyCatId")
                        .HasName("pk_my_categories");

                    b.ToTable("my_categories", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("DateAdded")
                        .HasColumnType("longtext")
                        .HasColumnName("date_added");

                    b.Property<string>("DateAvailable")
                        .HasColumnType("longtext")
                        .HasColumnName("date_available");

                    b.Property<string>("DateModified")
                        .HasColumnType("longtext")
                        .HasColumnName("date_modified");

                    b.Property<string>("DescriptionRU")
                        .HasColumnType("longtext")
                        .HasColumnName("description_ru");

                    b.Property<string>("DescriptionUA")
                        .HasColumnType("longtext")
                        .HasColumnName("description_ua");

                    b.Property<string>("ImageName")
                        .HasColumnType("longtext")
                        .HasColumnName("image_name");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("longtext")
                        .HasColumnName("manufacturer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("model");

                    b.Property<int>("MyCatId")
                        .HasColumnType("int")
                        .HasColumnName("my_cat_id");

                    b.Property<float>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<string>("ProductNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("product_name_ru");

                    b.Property<string>("ProductNameUA")
                        .HasColumnType("longtext")
                        .HasColumnName("product_name_ua");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("SeoKeyword")
                        .HasColumnType("longtext")
                        .HasColumnName("seo_keyword");

                    b.Property<int?>("Sku")
                        .HasColumnType("int")
                        .HasColumnName("sku");

                    b.Property<bool?>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("ProductId")
                        .HasName("pk_products");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("supplier_name");

                    b.HasKey("SupplierId")
                        .HasName("pk_suppliers");

                    b.ToTable("suppliers", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.SupplierAttribute", b =>
                {
                    b.Property<int>("SupAttrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sup_attr_id");

                    b.Property<string>("SupAttrNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("sup_attr_name_ru");

                    b.Property<string>("SupAttrNameUA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("sup_attr_name_ua");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("SupAttrId")
                        .HasName("pk_supplier_attributes");

                    b.ToTable("supplier_attributes", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.SupplierCategory", b =>
                {
                    b.Property<int>("SupplierCatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("supplier_cat_id");

                    b.Property<string>("CatNameRU")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cat_name_ru");

                    b.Property<string>("CatNameUA")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cat_name_ua");

                    b.Property<int>("ParentSupCatId")
                        .HasColumnType("int")
                        .HasColumnName("parent_sup_cat_id");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("supplier_id");

                    b.HasKey("SupplierCatId")
                        .HasName("pk_supplier_categories");

                    b.ToTable("supplier_categories", (string)null);
                });

            modelBuilder.Entity("MyAttributeSupplierAttribute", b =>
                {
                    b.HasOne("xmlParserASP.Entities.MyAttribute", null)
                        .WithMany()
                        .HasForeignKey("MyAttributesMyAttrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_my_attributes_supplier_attributes_my_attributes_my_attribute");

                    b.HasOne("xmlParserASP.Entities.SupplierAttribute", null)
                        .WithMany()
                        .HasForeignKey("SupplierAttributesSupAttrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_my_attributes_supplier_attributes_supplier_attributes_suppli");
                });

            modelBuilder.Entity("MyCategorySupplierCategory", b =>
                {
                    b.HasOne("xmlParserASP.Entities.MyCategory", null)
                        .WithMany()
                        .HasForeignKey("MyCategoriesMyCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_my_categories_supplier_categories_my_categories_my_categorie");

                    b.HasOne("xmlParserASP.Entities.SupplierCategory", null)
                        .WithMany()
                        .HasForeignKey("SupplierCategoriesSupplierCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_my_categories_supplier_categories_supplier_categories_suppli");
                });
#pragma warning restore 612, 618
        }
    }
}
