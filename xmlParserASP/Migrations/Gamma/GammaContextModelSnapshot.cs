// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using xmlParserASP.Presistant;

#nullable disable

namespace xmlParserASP.Migrations.Gamma
{
    [DbContext(typeof(GammaContext))]
    partial class GammaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("address_id");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("address_1");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("address_2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("city");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("company");

                    b.Property<int>("CountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("country_id");

                    b.Property<string>("CustomField")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("custom_field");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("postcode");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("zone_id");

                    b.HasKey("AddressId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CustomerId" }, "customer_id");

                    b.ToTable("oc_address", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAddressSimpleField", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("address_id");

                    b.Property<string>("Metadata")
                        .HasColumnType("text")
                        .HasColumnName("metadata");

                    b.HasKey("AddressId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_address_simple_fields", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAffiliate", b =>
                {
                    b.Property<int>("AffiliateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("affiliate_id");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("address_1");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("address_2");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("BankAccountName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("bank_account_name");

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("bank_account_number");

                    b.Property<string>("BankBranchNumber")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("bank_branch_number");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("bank_name");

                    b.Property<string>("BankSwiftCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("bank_swift_code");

                    b.Property<string>("Cheque")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cheque");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("city");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code");

                    b.Property<decimal>("Commission")
                        .HasPrecision(4)
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("commission");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("company");

                    b.Property<int>("CountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("fax");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("firstname");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("password");

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("payment");

                    b.Property<string>("Paypal")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("paypal");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("postcode");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("salt");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("Tax")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("tax");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("telephone");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("website");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("zone_id");

                    b.HasKey("AffiliateId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_affiliate", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAffiliateActivity", b =>
                {
                    b.Property<int>("AffiliateActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("affiliate_activity_id");

                    b.Property<int>("AffiliateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("affiliate_id");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("key");

                    b.HasKey("AffiliateActivityId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_affiliate_activity", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAffiliateLogin", b =>
                {
                    b.Property<int>("AffiliateLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("affiliate_login_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<int>("Total")
                        .HasColumnType("int(4)")
                        .HasColumnName("total");

                    b.HasKey("AffiliateLoginId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email");

                    b.HasIndex(new[] { "Ip" }, "ip");

                    b.ToTable("oc_affiliate_login", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAffiliateTransaction", b =>
                {
                    b.Property<int>("AffiliateTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("affiliate_transaction_id");

                    b.Property<int>("AffiliateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("affiliate_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.HasKey("AffiliateTransactionId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_affiliate_transaction", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAgooSigner", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Pointer")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("pointer");

                    b.HasIndex(new[] { "CustomerId" }, "customer_id");

                    b.HasIndex(new[] { "Date" }, "date");

                    b.HasIndex(new[] { "Id" }, "id");

                    b.HasIndex(new[] { "Pointer" }, "pointer");

                    b.ToTable("oc_agoo_signer", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcApi", b =>
                {
                    b.Property<int>("ApiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("api_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("ApiId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_api", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcApiIp", b =>
                {
                    b.Property<int>("ApiIpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("api_ip_id");

                    b.Property<int>("ApiId")
                        .HasColumnType("int(11)")
                        .HasColumnName("api_id");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.HasKey("ApiIpId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_api_ip", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcApiSession", b =>
                {
                    b.Property<int>("ApiSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("api_session_id");

                    b.Property<int>("ApiId")
                        .HasColumnType("int(11)")
                        .HasColumnName("api_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("session_id");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("session_name");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("token");

                    b.HasKey("ApiSessionId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_api_session", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributableToAttribute", b =>
                {
                    b.Property<int>("AttributableId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attributable_id");

                    b.Property<string>("AttributableType")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("attributable_type");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.HasKey("AttributableId", "AttributableType", "AttributeId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attributable_to_attribute", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttribute", b =>
                {
                    b.Property<int>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.Property<int>("AttributeGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_group_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("AttributeId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeDescription", b =>
                {
                    b.Property<int>("AttributeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("name");

                    b.HasKey("AttributeId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeEnum", b =>
                {
                    b.Property<int>("EnumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("enum_id");

                    b.HasKey("EnumId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_enum", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeEnumDescription", b =>
                {
                    b.Property<int>("EnumId")
                        .HasColumnType("int(11)")
                        .HasColumnName("enum_id");

                    b.Property<int>("EnumerationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("enumeration_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("EnumId", "EnumerationId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_enum_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeEnumeration", b =>
                {
                    b.Property<int>("EnumerationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("enumeration_id");

                    b.HasKey("EnumerationId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_enumeration", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeEnumerationDescription", b =>
                {
                    b.Property<int>("EnumerationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("enumeration_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("EnumerationId", "LanguageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name");

                    b.ToTable("oc_attribute_enumeration_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeGroup", b =>
                {
                    b.Property<int>("AttributeGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_group_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("AttributeGroupId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_group", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeGroupDescription", b =>
                {
                    b.Property<int>("AttributeGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_group_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("AttributeGroupId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_group_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("template_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("sort_order");

                    b.HasKey("TemplateId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_template", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeTemplateAttribute", b =>
                {
                    b.Property<int>("TemplateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("template_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("TemplateId", "AttributeId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_template_attribute", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeTemplateDescription", b =>
                {
                    b.Property<int>("TemplateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("template_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("TemplateId", "LanguageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .HasDatabaseName("name1");

                    b.ToTable("oc_attribute_template_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeTemplateToAttributeToAttributable", b =>
                {
                    b.Property<int>("AttributeTemplateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_template_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.Property<int>("AttributableId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attributable_id");

                    b.Property<string>("AttributableType")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("attributable_type");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("sort_order");

                    b.HasKey("AttributeTemplateId", "AttributeId", "AttributableId", "AttributableType")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_template_to_attribute_to_attributable", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeUnit", b =>
                {
                    b.Property<int>("AttributeUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_unit_id");

                    b.HasKey("AttributeUnitId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_unit", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcAttributeUnitDescription", b =>
                {
                    b.Property<int>("AttributeUnitId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_unit_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("value");

                    b.HasKey("AttributeUnitId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_attribute_unit_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcBanner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("banner_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("BannerId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_banner", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcBannerImage", b =>
                {
                    b.Property<int>("BannerImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("banner_image_id");

                    b.Property<int>("BannerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("banner_id");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("title");

                    b.HasKey("BannerImageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_banner_image", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCart", b =>
                {
                    b.Property<uint>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("cart_id");

                    b.Property<int>("ApiId")
                        .HasColumnType("int(11)")
                        .HasColumnName("api_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Option")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("option");

                    b.Property<decimal?>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductRow")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("product_row");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(5)")
                        .HasColumnName("quantity");

                    b.Property<int>("RecurringId")
                        .HasColumnType("int(11)")
                        .HasColumnName("recurring_id");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("session_id");

                    b.HasKey("CartId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ApiId", "CustomerId", "SessionId", "ProductId", "RecurringId" }, "cart_id");

                    b.ToTable("oc_cart", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("Column")
                        .HasColumnType("int(3)")
                        .HasColumnName("column");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<uint>("NixSupplierCategoryId")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("nix_supplier_category_id");

                    b.Property<uint>("NixSupplierId")
                        .HasColumnType("int(3) unsigned")
                        .HasColumnName("nix_supplier_id");

                    b.Property<int>("ParentId")
                        .HasColumnType("int(11)")
                        .HasColumnName("parent_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<bool>("Top")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("top");

                    b.HasKey("CategoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NixSupplierCategoryId" }, "nix_supplier_category_id");

                    b.HasIndex(new[] { "ParentId" }, "parent_id");

                    b.ToTable("oc_category", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCategoryDescription", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaH1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_h1");

                    b.Property<string>("MetaKeyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_keyword");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_title");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("CategoryId", "LanguageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .HasDatabaseName("name2");

                    b.ToTable("oc_category_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCategoryFilter", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("FilterId")
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_id");

                    b.HasKey("CategoryId", "FilterId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_category_filter", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCategoryPath", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("PathId")
                        .HasColumnType("int(11)")
                        .HasColumnName("path_id");

                    b.Property<int>("Level")
                        .HasColumnType("int(11)")
                        .HasColumnName("level");

                    b.HasKey("CategoryId", "PathId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_category_path", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCategoryToLayout", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<int>("LayoutId")
                        .HasColumnType("int(11)")
                        .HasColumnName("layout_id");

                    b.HasKey("CategoryId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_category_to_layout", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCategoryToPromCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("PromCategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("prom_category_id");

                    b.HasKey("CategoryId", "PromCategoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PromCategoryId" }, "prom_category_id");

                    b.ToTable("oc_category_to_prom_category", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCategoryToStore", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.HasKey("CategoryId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_category_to_store", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsCacheEmail", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("email_id");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("country");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<int>("SendId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_id");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("zone");

                    b.HasKey("EmailId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .HasDatabaseName("email1");

                    b.HasIndex(new[] { "SendId" }, "send_id");

                    b.ToTable("oc_contacts_cache_email", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsCacheProduct", b =>
                {
                    b.Property<int>("ProductCacheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_cache_id");

                    b.Property<bool>("CatEach")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("cat_each");

                    b.Property<string>("CatId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cat_id");

                    b.Property<int>("CronId")
                        .HasColumnType("int(11)")
                        .HasColumnName("cron_id");

                    b.Property<string>("ProdId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prod_id");

                    b.Property<int>("Qty")
                        .HasColumnType("int(11)")
                        .HasColumnName("qty");

                    b.Property<int>("SendId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("type");

                    b.HasKey("ProductCacheId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CronId" }, "cron_id");

                    b.HasIndex(new[] { "SendId" }, "send_id")
                        .HasDatabaseName("send_id1");

                    b.ToTable("oc_contacts_cache_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsCacheSend", b =>
                {
                    b.Property<int>("SendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("send_id");

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("attachments");

                    b.Property<string>("AttachmentsCat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("attachments_cat");

                    b.Property<bool>("ControlUnsub")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("control_unsub");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<string>("Dopurl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dopurl");

                    b.Property<int>("EmailTotal")
                        .HasColumnType("int(11)")
                        .HasColumnName("email_total");

                    b.Property<int>("Errors")
                        .HasColumnType("int(11)")
                        .HasColumnName("errors");

                    b.Property<bool>("InversAffiliate")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_affiliate");

                    b.Property<bool>("InversCategory")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_category");

                    b.Property<bool>("InversClient")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_client");

                    b.Property<bool>("InversCustomer")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_customer");

                    b.Property<bool>("InversProduct")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_product");

                    b.Property<bool>("InversRegion")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_region");

                    b.Property<int>("LangProducts")
                        .HasColumnType("int(11)")
                        .HasColumnName("lang_products");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("Newmessage")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("newmessage");

                    b.Property<bool>("Reqreview")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("reqreview");

                    b.Property<int>("SendCountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_country_id");

                    b.Property<bool>("SendProducts")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("send_products");

                    b.Property<bool>("SendRegion")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("send_region");

                    b.Property<string>("SendTo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("send_to");

                    b.Property<string>("SendToData")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("send_to_data");

                    b.Property<int>("SendType")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_type");

                    b.Property<int>("SendZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_zone_id");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.Property<bool>("UnsubUrl")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("unsub_url");

                    b.HasKey("SendId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_contacts_cache_send", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsClick", b =>
                {
                    b.Property<int>("ClickId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("click_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<int>("SendId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_id");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("target");

                    b.HasKey("ClickId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SendId" }, "send_id")
                        .HasDatabaseName("send_id2");

                    b.ToTable("oc_contacts_clicks", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsCountMail", b =>
                {
                    b.Property<int>("CountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("count_id");

                    b.Property<int>("CronId")
                        .HasColumnType("int(11)")
                        .HasColumnName("cron_id");

                    b.Property<int>("DateSend")
                        .HasColumnType("int(11)")
                        .HasColumnName("date_send");

                    b.Property<int>("Items")
                        .HasColumnType("int(11)")
                        .HasColumnName("items");

                    b.Property<int>("SendId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_id");

                    b.HasKey("CountId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "DateSend" }, "date_send");

                    b.ToTable("oc_contacts_count_mails", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsCron", b =>
                {
                    b.Property<int>("CronId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("cron_id");

                    b.Property<bool>("Checking")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("checking");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<DateTime?>("DateNext")
                        .HasColumnType("datetime")
                        .HasColumnName("date_next");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime")
                        .HasColumnName("date_start");

                    b.Property<int>("Errors")
                        .HasColumnType("int(11)")
                        .HasColumnName("errors");

                    b.Property<int>("HistoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("history_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("Period")
                        .HasColumnType("int(11)")
                        .HasColumnName("period");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("Step")
                        .HasColumnType("int(11)")
                        .HasColumnName("step");

                    b.HasKey("CronId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_contacts_cron", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsCronDatum", b =>
                {
                    b.Property<int>("CronDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("cron_data_id");

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("attachments");

                    b.Property<string>("AttachmentsCat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("attachments_cat");

                    b.Property<bool>("ControlUnsub")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("control_unsub");

                    b.Property<int>("CronId")
                        .HasColumnType("int(11)")
                        .HasColumnName("cron_id");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<DateTime>("DateEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_end")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<DateTime>("DateStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_start")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<string>("Dopurl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dopurl");

                    b.Property<int>("EmailTotal")
                        .HasColumnType("int(11)")
                        .HasColumnName("email_total");

                    b.Property<bool>("EmbadAction")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("embad_action");

                    b.Property<bool>("EmnovalidAction")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("emnovalid_action");

                    b.Property<bool>("EmsuspectAction")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("emsuspect_action");

                    b.Property<bool>("InversAffiliate")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_affiliate");

                    b.Property<bool>("InversCategory")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_category");

                    b.Property<bool>("InversClient")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_client");

                    b.Property<bool>("InversCustomer")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_customer");

                    b.Property<bool>("InversProduct")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_product");

                    b.Property<bool>("InversRegion")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("invers_region");

                    b.Property<int>("LangProducts")
                        .HasColumnType("int(11)")
                        .HasColumnName("lang_products");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<int>("LimitEnd")
                        .HasColumnType("int(11)")
                        .HasColumnName("limit_end");

                    b.Property<int>("LimitStart")
                        .HasColumnType("int(11)")
                        .HasColumnName("limit_start");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<bool>("Reqreview")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("reqreview");

                    b.Property<int>("SendCountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_country_id");

                    b.Property<bool>("SendProducts")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("send_products");

                    b.Property<bool>("SendRegion")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("send_region");

                    b.Property<string>("SendTo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("send_to");

                    b.Property<string>("SendToData")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("send_to_data");

                    b.Property<int>("SendZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_zone_id");

                    b.Property<string>("Static")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("static");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.Property<bool>("UnsubUrl")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("unsub_url");

                    b.HasKey("CronDataId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CronId" }, "cron_id")
                        .HasDatabaseName("cron_id1");

                    b.ToTable("oc_contacts_cron_data", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsCronEmail", b =>
                {
                    b.Property<int>("CemailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("cemail_id");

                    b.Property<bool>("CheckStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("check_status");

                    b.Property<string>("CheckText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("check_text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("country");

                    b.Property<int>("CronId")
                        .HasColumnType("int(11)")
                        .HasColumnName("cron_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("zone");

                    b.HasKey("CemailId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CheckStatus" }, "check_status");

                    b.HasIndex(new[] { "CronId" }, "cron_id")
                        .HasDatabaseName("cron_id2");

                    b.HasIndex(new[] { "Email" }, "email")
                        .HasDatabaseName("email2");

                    b.ToTable("oc_contacts_cron_emails", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsCronHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("history_id");

                    b.Property<int>("CountEmails")
                        .HasColumnType("int(11)")
                        .HasColumnName("count_emails");

                    b.Property<int>("CronId")
                        .HasColumnType("int(11)")
                        .HasColumnName("cron_id");

                    b.Property<bool>("CronStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("cron_status");

                    b.Property<DateTime>("DateCronrun")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_cronrun")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<DateTime>("DateCronstop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_cronstop")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<string>("LogFile")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("log_file");

                    b.Property<int>("SendId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_id");

                    b.Property<string>("TextError")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("text_error");

                    b.HasKey("HistoryId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_contacts_cron_history", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("group_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("GroupId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_contacts_group", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsNewsletter", b =>
                {
                    b.Property<int>("NewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("newsletter_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("firstname");

                    b.Property<int>("GroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("group_id");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<int>("UnsubscribeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("unsubscribe_id");

                    b.HasKey("NewsletterId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CustomerId" }, "customer_id")
                        .HasDatabaseName("customer_id1");

                    b.HasIndex(new[] { "Email" }, "email")
                        .HasDatabaseName("email3");

                    b.HasIndex(new[] { "GroupId" }, "group_id");

                    b.ToTable("oc_contacts_newsletter", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsReqreviewMail", b =>
                {
                    b.Property<int>("RevmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("revmail_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.HasKey("RevmailId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .HasDatabaseName("email4");

                    b.ToTable("oc_contacts_reqreview_mails", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsReqreviewProduct", b =>
                {
                    b.Property<int>("ReqreviewProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("reqreview_product_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("RevmailId")
                        .HasColumnType("int(11)")
                        .HasColumnName("revmail_id");

                    b.HasKey("ReqreviewProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "RevmailId" }, "revmail_id");

                    b.ToTable("oc_contacts_reqreview_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("template_id");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.HasKey("TemplateId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_contacts_template", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsUnsubscribe", b =>
                {
                    b.Property<int>("UnsubscribeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("unsubscribe_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<int>("SendId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_id");

                    b.HasKey("UnsubscribeId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .HasDatabaseName("email5");

                    b.HasIndex(new[] { "SendId" }, "send_id")
                        .HasDatabaseName("send_id3");

                    b.ToTable("oc_contacts_unsubscribe", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcContactsView", b =>
                {
                    b.Property<int>("ViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("view_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("'0000-00-00 00:00:00'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<int>("SendId")
                        .HasColumnType("int(11)")
                        .HasColumnName("send_id");

                    b.HasKey("ViewId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SendId" }, "send_id")
                        .HasDatabaseName("send_id4");

                    b.ToTable("oc_contacts_views", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("country_id");

                    b.Property<string>("AddressFormat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address_format");

                    b.Property<string>("IsoCode2")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("iso_code_2");

                    b.Property<string>("IsoCode3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("iso_code_3");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.Property<bool>("PostcodeRequired")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("postcode_required");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("CountryId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_country", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCoupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("coupon_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_end")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<DateTime>("DateStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_start")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<decimal>("Discount")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("discount");

                    b.Property<bool>("Logged")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("logged");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.Property<bool>("Shipping")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("shipping");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<decimal>("Total")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("total");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("type")
                        .IsFixedLength();

                    b.Property<string>("UsesCustomer")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("uses_customer");

                    b.Property<int>("UsesTotal")
                        .HasColumnType("int(11)")
                        .HasColumnName("uses_total");

                    b.HasKey("CouponId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_coupon", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCouponCategory", b =>
                {
                    b.Property<int>("CouponId")
                        .HasColumnType("int(11)")
                        .HasColumnName("coupon_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.HasKey("CouponId", "CategoryId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_coupon_category", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCouponHistory", b =>
                {
                    b.Property<int>("CouponHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("coupon_history_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("amount");

                    b.Property<int>("CouponId")
                        .HasColumnType("int(11)")
                        .HasColumnName("coupon_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.HasKey("CouponHistoryId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_coupon_history", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCouponProduct", b =>
                {
                    b.Property<int>("CouponProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("coupon_product_id");

                    b.Property<int>("CouponId")
                        .HasColumnType("int(11)")
                        .HasColumnName("coupon_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.HasKey("CouponProductId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_coupon_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCurrency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("currency_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("DecimalPlace")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("decimal_place")
                        .IsFixedLength();

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("SymbolLeft")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("symbol_left");

                    b.Property<string>("SymbolRight")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("symbol_right");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("title");

                    b.Property<float>("Value")
                        .HasColumnType("float(15,8)")
                        .HasColumnName("value");

                    b.HasKey("CurrencyId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_currency", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomField", b =>
                {
                    b.Property<int>("CustomFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("location");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("type");

                    b.Property<string>("Validation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("validation");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("CustomFieldId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_custom_field", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomFieldCustomerGroup", b =>
                {
                    b.Property<int>("CustomFieldId")
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_id");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<bool>("Required")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("required");

                    b.HasKey("CustomFieldId", "CustomerGroupId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_custom_field_customer_group", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomFieldDescription", b =>
                {
                    b.Property<int>("CustomFieldId")
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("CustomFieldId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_custom_field_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomFieldValue", b =>
                {
                    b.Property<int>("CustomFieldValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_value_id");

                    b.Property<int>("CustomFieldId")
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("CustomFieldValueId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_custom_field_value", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomFieldValueDescription", b =>
                {
                    b.Property<int>("CustomFieldValueId")
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_value_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<int>("CustomFieldId")
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("CustomFieldValueId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_custom_field_value_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomMenu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("menu_id");

                    b.Property<int?>("Column")
                        .HasColumnType("int(11)")
                        .HasColumnName("column");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Link")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int(11)")
                        .HasColumnName("parent_id");

                    b.Property<int?>("ParentParentId")
                        .HasColumnType("int(11)")
                        .HasColumnName("parent_parent_id");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("sort_order");

                    b.Property<int?>("Status")
                        .HasColumnType("int(11)")
                        .HasColumnName("status");

                    b.HasKey("MenuId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_custom_menu", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomMenuDescription", b =>
                {
                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<int>("MenuId")
                        .HasColumnType("int(11)")
                        .HasColumnName("menu_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.ToTable("oc_custom_menu_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<int>("AddressId")
                        .HasColumnType("int(11)")
                        .HasColumnName("address_id");

                    b.Property<bool>("Approved")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("approved");

                    b.Property<string>("Cart")
                        .HasColumnType("text")
                        .HasColumnName("cart");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("code");

                    b.Property<string>("CustomField")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("custom_field");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("fax");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("firstname");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<bool>("Newsletter")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("newsletter");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("password");

                    b.Property<bool>("Safe")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("safe");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("salt");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("telephone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<string>("Wishlist")
                        .HasColumnType("text")
                        .HasColumnName("wishlist");

                    b.HasKey("CustomerId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerActivity", b =>
                {
                    b.Property<int>("CustomerActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_activity_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("data");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("key");

                    b.HasKey("CustomerActivityId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_activity", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerGroup", b =>
                {
                    b.Property<int>("CustomerGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<int>("Approval")
                        .HasColumnType("int(1)")
                        .HasColumnName("approval");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("CustomerGroupId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_group", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerGroupDescription", b =>
                {
                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.HasKey("CustomerGroupId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_group_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerHistory", b =>
                {
                    b.Property<int>("CustomerHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_history_id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.HasKey("CustomerHistoryId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_history", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerIp", b =>
                {
                    b.Property<int>("CustomerIpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_ip_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.HasKey("CustomerIpId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Ip" }, "ip")
                        .HasDatabaseName("ip1");

                    b.ToTable("oc_customer_ip", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerLogin", b =>
                {
                    b.Property<int>("CustomerLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_login_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<int>("Total")
                        .HasColumnType("int(4)")
                        .HasColumnName("total");

                    b.HasKey("CustomerLoginId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .HasDatabaseName("email6");

                    b.HasIndex(new[] { "Ip" }, "ip")
                        .HasDatabaseName("ip2");

                    b.ToTable("oc_customer_login", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerOnline", b =>
                {
                    b.Property<string>("Ip")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Referer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("referer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Ip")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_online", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerReward", b =>
                {
                    b.Property<int>("CustomerRewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_reward_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<int>("Points")
                        .HasColumnType("int(8)")
                        .HasColumnName("points");

                    b.HasKey("CustomerRewardId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_reward", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerSearch", b =>
                {
                    b.Property<int>("CustomerSearchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_search_id");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<bool>("Description")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("description");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("keyword");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<int>("Products")
                        .HasColumnType("int(11)")
                        .HasColumnName("products");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<bool>("SubCategory")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sub_category");

                    b.HasKey("CustomerSearchId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_search", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerSimpleField", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<string>("Metadata")
                        .HasColumnType("text")
                        .HasColumnName("metadata");

                    b.HasKey("CustomerId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_simple_fields", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerTransaction", b =>
                {
                    b.Property<int>("CustomerTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_transaction_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("amount");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.HasKey("CustomerTransactionId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_transaction", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcCustomerWishlist", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.HasKey("CustomerId", "ProductId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_customer_wishlist", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcDownload", b =>
                {
                    b.Property<int>("DownloadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("download_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)")
                        .HasColumnName("filename");

                    b.Property<string>("Mask")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("mask");

                    b.HasKey("DownloadId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_download", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcDownloadDescription", b =>
                {
                    b.Property<int>("DownloadId")
                        .HasColumnType("int(11)")
                        .HasColumnName("download_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("DownloadId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_download_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("event_id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("action");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("trigger");

                    b.HasKey("EventId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_event", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcExtension", b =>
                {
                    b.Property<int>("ExtensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("extension_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("code");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("type");

                    b.HasKey("ExtensionId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_extension", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcFilter", b =>
                {
                    b.Property<int>("FilterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_id");

                    b.Property<int>("FilterGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_group_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("FilterId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_filter", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcFilterDescription", b =>
                {
                    b.Property<int>("FilterId")
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<int>("FilterGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_group_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("FilterId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_filter_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcFilterGroup", b =>
                {
                    b.Property<int>("FilterGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_group_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("FilterGroupId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_filter_group", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcFilterGroupDescription", b =>
                {
                    b.Property<int>("FilterGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_group_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("FilterGroupId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_filter_group_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcGeoZone", b =>
                {
                    b.Property<int>("GeoZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("geo_zone_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.HasKey("GeoZoneId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_geo_zone", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcInformation", b =>
                {
                    b.Property<int>("InformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("information_id");

                    b.Property<int>("Bottom")
                        .HasColumnType("int(1)")
                        .HasColumnName("bottom");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("InformationId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_information", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcInformationDescription", b =>
                {
                    b.Property<int>("InformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("information_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaH1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_h1");

                    b.Property<string>("MetaKeyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_keyword");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_title");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("title");

                    b.HasKey("InformationId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_information_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcInformationToLayout", b =>
                {
                    b.Property<int>("InformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("information_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<int>("LayoutId")
                        .HasColumnType("int(11)")
                        .HasColumnName("layout_id");

                    b.HasKey("InformationId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_information_to_layout", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcInformationToStore", b =>
                {
                    b.Property<int>("InformationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("information_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.HasKey("InformationId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_information_to_store", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcKdWarehouseCode", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<string>("KdCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("kd_code");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "KdCode" }, "kd_code");

                    b.ToTable("oc_kd_warehouse_code", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("LicenseKey")
                        .HasColumnType("text")
                        .HasColumnName("license_key");

                    b.Property<string>("MainKey")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("main_key");

                    b.Property<string>("Value")
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("oc_key", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLanguage", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("code");

                    b.Property<string>("Directory")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("directory");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("image");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("locale");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("LanguageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .HasDatabaseName("name3");

                    b.ToTable("oc_language", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLayout", b =>
                {
                    b.Property<int>("LayoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("layout_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("LayoutId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_layout", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLayoutModule", b =>
                {
                    b.Property<int>("LayoutModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("layout_module_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code");

                    b.Property<int>("LayoutId")
                        .HasColumnType("int(11)")
                        .HasColumnName("layout_id");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("position");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("LayoutModuleId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_layout_module", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLayoutRoute", b =>
                {
                    b.Property<int>("LayoutRouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("layout_route_id");

                    b.Property<int>("LayoutId")
                        .HasColumnType("int(11)")
                        .HasColumnName("layout_id");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("route");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.HasKey("LayoutRouteId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_layout_route", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLengthClass", b =>
                {
                    b.Property<int>("LengthClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("length_class_id");

                    b.Property<decimal>("Value")
                        .HasPrecision(15)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("value");

                    b.HasKey("LengthClassId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_length_class", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLengthClassDescription", b =>
                {
                    b.Property<int>("LengthClassId")
                        .HasColumnType("int(11)")
                        .HasColumnName("length_class_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("title");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("unit");

                    b.HasKey("LengthClassId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_length_class_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLocation", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("location_id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("fax");

                    b.Property<string>("Geocode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("geocode");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.Property<string>("Open")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("open");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("telephone");

                    b.HasKey("LocationId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .HasDatabaseName("name4");

                    b.ToTable("oc_location", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLostedCart", b =>
                {
                    b.Property<int>("LostedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("losted_id");

                    b.Property<string>("Coupon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("coupon");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("currency_code");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateNotified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_notified");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("firstname");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(2)")
                        .HasColumnName("language_id");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("lastname");

                    b.Property<bool>("Notified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("notified");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("session_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(2)")
                        .HasColumnName("store_id");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("telephone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("token");

                    b.HasKey("LostedId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SessionId" }, "session_id");

                    b.ToTable("oc_losted_cart", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcLostedCartLog", b =>
                {
                    b.Property<DateTime>("DateSend")
                        .HasColumnType("datetime")
                        .HasColumnName("date_send");

                    b.Property<int>("LostedId")
                        .HasColumnType("int(11)")
                        .HasColumnName("losted_id");

                    b.HasIndex(new[] { "LostedId" }, "losted_id");

                    b.ToTable("oc_losted_cart_log", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcManufacturer", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("manufacturer_id");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("ManufacturerId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_manufacturer", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcManufacturerDescription", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("manufacturer_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaH1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_h1");

                    b.Property<string>("MetaKeyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_keyword");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_title");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("ManufacturerId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_manufacturer_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcManufacturerToStore", b =>
                {
                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("manufacturer_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.HasKey("ManufacturerId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_manufacturer_to_store", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcMarketing", b =>
                {
                    b.Property<int>("MarketingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("marketing_id");

                    b.Property<int>("Clicks")
                        .HasColumnType("int(5)")
                        .HasColumnName("clicks");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.HasKey("MarketingId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_marketing", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcMenu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("menu_id");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("type");

                    b.HasKey("MenuId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_menu", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcMenuDescription", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int(11)")
                        .HasColumnName("menu_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("MenuId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_menu_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcMenuModule", b =>
                {
                    b.Property<int>("MenuModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("menu_module_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code");

                    b.Property<int>("MenuId")
                        .HasColumnType("int(11)")
                        .HasColumnName("menu_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("MenuModuleId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MenuId" }, "menu_id");

                    b.ToTable("oc_menu_module", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcModification", b =>
                {
                    b.Property<int>("ModificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("modification_id");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("author");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("version");

                    b.Property<string>("Xml")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .HasColumnName("xml");

                    b.HasKey("ModificationId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_modification", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcModule", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("module_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<string>("Setting")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("setting");

                    b.HasKey("ModuleId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_module", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcMultiXml", b =>
                {
                    b.Property<int>("XmlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("xml_id");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("categories");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Products")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("products");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("settings");

                    b.Property<string>("Suppliers")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("suppliers");

                    b.HasKey("XmlId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_multi_xml", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcMultiplicityProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("''");

                    b.Property<int>("Step")
                        .HasColumnType("int(11)")
                        .HasColumnName("step");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_multiplicity_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcNixSupplier", b =>
                {
                    b.Property<uint>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("supplier_id");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .HasColumnName("attributes");

                    b.Property<string>("LinkPrice")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link_price");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .HasColumnName("tags");

                    b.HasKey("SupplierId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_nix_suppliers", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcNovaposhtaCity", b =>
                {
                    b.Property<string>("Ref")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("CityId")
                        .HasColumnType("int(11)")
                        .HasColumnName("CityID");

                    b.Property<string>("Conglomerates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Delivery1")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Delivery2")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Delivery3")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Delivery4")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Delivery5")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Delivery6")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Delivery7")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionRu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsBranch")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PreventEntryNewStreetsUser")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SettlementType")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("SettlementTypeDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SettlementTypeDescriptionRu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("SpecialCashCheck")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Ref")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Area" }, "Area");

                    b.HasIndex(new[] { "CityId" }, "CityID");

                    b.HasIndex(new[] { "SettlementType" }, "SettlementType");

                    b.ToTable("oc_novaposhta_cities", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcNovaposhtaReference", b =>
                {
                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("type");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .HasColumnName("value");

                    b.HasIndex(new[] { "Type" }, "type")
                        .IsUnique();

                    b.ToTable("oc_novaposhta_references", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcNovaposhtaWarehouse", b =>
                {
                    b.Property<string>("Ref")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<bool>("BicycleParking")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("CategoryOfWarehouse")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CityDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CityDescriptionRu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CityRef")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Delivery")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DescriptionRu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("InternationalShipping")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<int>("Number")
                        .HasColumnType("int(11)");

                    b.Property<bool>("PaymentAccess")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PlaceMaxWeightAllowed")
                        .HasColumnType("int(11)");

                    b.Property<bool>("PostFinance")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Posterminal")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("POSTerminal");

                    b.Property<string>("Reception")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ShortAddressRu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("SiteKey")
                        .HasColumnType("int(11)");

                    b.Property<int>("TotalMaxWeightAllowed")
                        .HasColumnType("int(11)");

                    b.Property<string>("TypeOfWarehouse")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("WarehouseStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Ref")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CityRef" }, "CityRef");

                    b.HasIndex(new[] { "SiteKey" }, "SiteKey");

                    b.HasIndex(new[] { "TypeOfWarehouse" }, "TypeOfWarehouse");

                    b.ToTable("oc_novaposhta_warehouses", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterHref", b =>
                {
                    b.Property<int>("OcfHrefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ocf_href_id");

                    b.Property<string>("Canonical")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("canonical");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<string>("Robots")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("robots");

                    b.HasKey("OcfHrefId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_ocfilter_href", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterOption", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<bool>("Color")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("color");

                    b.Property<sbyte>("Grouping")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("grouping");

                    b.Property<bool>("Image")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("image");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("keyword")
                        .HasDefaultValueSql("''");

                    b.Property<bool>("Selectbox")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("selectbox");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("sort_order");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("type")
                        .HasDefaultValueSql("'checkbox'");

                    b.HasKey("OptionId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Keyword" }, "keyword");

                    b.HasIndex(new[] { "SortOrder" }, "sort_order");

                    b.ToTable("oc_ocfilter_option", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterOptionDescription", b =>
                {
                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<sbyte>("LanguageId")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Postfix")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("postfix")
                        .HasDefaultValueSql("''");

                    b.HasKey("OptionId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_ocfilter_option_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterOptionToCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.HasKey("CategoryId", "OptionId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "category_id");

                    b.ToTable("oc_ocfilter_option_to_category", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterOptionToStore", b =>
                {
                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.HasKey("StoreId", "OptionId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_ocfilter_option_to_store", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterOptionValue", b =>
                {
                    b.Property<long>("ValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("value_id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("color")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Image")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("keyword")
                        .HasDefaultValueSql("''");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("sort_order");

                    b.HasKey("ValueId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Keyword" }, "keyword")
                        .HasDatabaseName("keyword1");

                    b.HasIndex(new[] { "OptionId" }, "option_id");

                    b.ToTable("oc_ocfilter_option_value", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterOptionValueDescription", b =>
                {
                    b.Property<long>("ValueId")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("value_id");

                    b.Property<sbyte>("LanguageId")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("''");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.HasKey("ValueId", "LanguageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .HasDatabaseName("name5");

                    b.HasIndex(new[] { "OptionId" }, "option_id")
                        .HasDatabaseName("option_id1");

                    b.ToTable("oc_ocfilter_option_value_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterOptionValueToProduct", b =>
                {
                    b.Property<int>("OcfilterOptionValueToProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ocfilter_option_value_to_product_id");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<decimal>("SlideValueMax")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("slide_value_max");

                    b.Property<decimal>("SlideValueMin")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("slide_value_min");

                    b.Property<long>("ValueId")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("value_id");

                    b.HasKey("OcfilterOptionValueToProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OptionId", "ValueId", "ProductId" }, "option_id_value_id_product_id")
                        .IsUnique();

                    b.HasIndex(new[] { "ProductId" }, "product_id");

                    b.HasIndex(new[] { "SlideValueMin", "SlideValueMax" }, "slide_value_min_slide_value_max");

                    b.ToTable("oc_ocfilter_option_value_to_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterOptionValueToProductDescription", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<long>("ValueId")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("value_id");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<sbyte>("LanguageId")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("''");

                    b.HasKey("ProductId", "ValueId", "OptionId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_ocfilter_option_value_to_product_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterPage", b =>
                {
                    b.Property<int>("OcfilterPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("ocfilter_page_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("keyword");

                    b.Property<string>("Over")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("set('domain','category')")
                        .HasColumnName("over")
                        .HasDefaultValueSql("'category'");

                    b.Property<string>("Params")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("params");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("OcfilterPageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId", "Params" }, "category_id_params");

                    b.HasIndex(new[] { "Keyword" }, "keyword")
                        .HasDatabaseName("keyword2");

                    b.ToTable("oc_ocfilter_page", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOcfilterPageDescription", b =>
                {
                    b.Property<int>("OcfilterPageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("ocfilter_page_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaKeyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_keyword");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_title");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("title");

                    b.HasKey("OcfilterPageId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_ocfilter_page_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOnOrder", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<bool>("OnOrderStatus")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("on_order_status");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OnOrderStatus" }, "on_order_status");

                    b.ToTable("oc_on_order", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOption", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("type");

                    b.HasKey("OptionId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_option", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOptionDescription", b =>
                {
                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("OptionId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_option_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOptionValue", b =>
                {
                    b.Property<int>("OptionValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("option_value_id");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("OptionValueId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_option_value", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOptionValueDescription", b =>
                {
                    b.Property<int>("OptionValueId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_value_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.HasKey("OptionValueId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_option_value_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<string>("AcceptLanguage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("accept_language");

                    b.Property<int>("AffiliateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("affiliate_id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<decimal>("Commission")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("commission");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("currency_code");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int(11)")
                        .HasColumnName("currency_id");

                    b.Property<decimal>("CurrencyValue")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(15, 8)
                        .HasColumnType("decimal(15,8)")
                        .HasColumnName("currency_value")
                        .HasDefaultValueSql("'1.00000000'");

                    b.Property<string>("CustomField")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("custom_field");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("fax");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("firstname");

                    b.Property<string>("ForwardedIp")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("forwarded_ip");

                    b.Property<int>("InvoiceNo")
                        .HasColumnType("int(11)")
                        .HasColumnName("invoice_no");

                    b.Property<string>("InvoicePrefix")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("varchar(26)")
                        .HasColumnName("invoice_prefix");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<int>("MarketingId")
                        .HasColumnType("int(11)")
                        .HasColumnName("marketing_id");

                    b.Property<string>("NovaposhtaCnNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("novaposhta_cn_number");

                    b.Property<string>("NovaposhtaCnRef")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("novaposhta_cn_ref");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_status_id");

                    b.Property<string>("PaymentAddress1")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("payment_address_1");

                    b.Property<string>("PaymentAddress2")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("payment_address_2");

                    b.Property<string>("PaymentAddressFormat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("payment_address_format");

                    b.Property<string>("PaymentCity")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("payment_city");

                    b.Property<string>("PaymentCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("payment_code");

                    b.Property<string>("PaymentCompany")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("payment_company");

                    b.Property<string>("PaymentCountry")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("payment_country");

                    b.Property<int>("PaymentCountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("payment_country_id");

                    b.Property<string>("PaymentCustomField")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("payment_custom_field");

                    b.Property<string>("PaymentFirstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("payment_firstname");

                    b.Property<string>("PaymentLastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("payment_lastname");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("payment_method");

                    b.Property<string>("PaymentPostcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("payment_postcode");

                    b.Property<string>("PaymentZone")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("payment_zone");

                    b.Property<int>("PaymentZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("payment_zone_id");

                    b.Property<string>("ShippingAddress1")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("shipping_address_1");

                    b.Property<string>("ShippingAddress2")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("shipping_address_2");

                    b.Property<string>("ShippingAddressFormat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shipping_address_format");

                    b.Property<string>("ShippingCity")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("shipping_city");

                    b.Property<string>("ShippingCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("shipping_code");

                    b.Property<string>("ShippingCompany")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("shipping_company");

                    b.Property<string>("ShippingCountry")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("shipping_country");

                    b.Property<int>("ShippingCountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("shipping_country_id");

                    b.Property<string>("ShippingCustomField")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("shipping_custom_field");

                    b.Property<string>("ShippingFirstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("shipping_firstname");

                    b.Property<string>("ShippingLastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("shipping_lastname");

                    b.Property<float>("ShippingLatitude")
                        .HasColumnType("float(9,6)")
                        .HasColumnName("shipping_latitude");

                    b.Property<float>("ShippingLongitude")
                        .HasColumnType("float(9,6)")
                        .HasColumnName("shipping_longitude");

                    b.Property<string>("ShippingMethod")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("shipping_method");

                    b.Property<string>("ShippingPostcode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("shipping_postcode");

                    b.Property<string>("ShippingZone")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("shipping_zone");

                    b.Property<int>("ShippingZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("shipping_zone_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("store_name");

                    b.Property<string>("StoreUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("store_url");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("telephone");

                    b.Property<decimal>("Total")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("total");

                    b.Property<string>("TrackNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("track_no");

                    b.Property<string>("Tracking")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("tracking");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_agent");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CustomerId" }, "customer_id")
                        .HasDatabaseName("customer_id2");

                    b.HasIndex(new[] { "OrderStatusId" }, "order_status_id");

                    b.ToTable("oc_order", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderCustomField", b =>
                {
                    b.Property<int>("OrderCustomFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_custom_field_id");

                    b.Property<int>("CustomFieldId")
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_id");

                    b.Property<int>("CustomFieldValueId")
                        .HasColumnType("int(11)")
                        .HasColumnName("custom_field_value_id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("type");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("OrderCustomFieldId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_order_custom_field", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderHistory", b =>
                {
                    b.Property<int>("OrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_history_id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<bool>("Notify")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("notify");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_status_id");

                    b.HasKey("OrderHistoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "order_id");

                    b.ToTable("oc_order_history", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderOption", b =>
                {
                    b.Property<int>("OrderOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_option_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<int>("OrderProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_product_id");

                    b.Property<int>("ProductOptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_option_id");

                    b.Property<int>("ProductOptionValueId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_option_value_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("type");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("OrderOptionId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_order_option", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderPermission", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.HasKey("UserId", "OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "order_id")
                        .HasDatabaseName("order_id1");

                    b.ToTable("oc_order_permissions", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderProduct", b =>
                {
                    b.Property<int>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_product_id");

                    b.Property<decimal>("DiscountAmount")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("discount_amount");

                    b.Property<string>("DiscountType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("discount_type");

                    b.Property<string>("Ean")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("ean");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("isbn");

                    b.Property<string>("Jan")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("jan");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("location");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("model");

                    b.Property<string>("Mpn")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("mpn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(4)")
                        .HasColumnName("quantity");

                    b.Property<int>("Reward")
                        .HasColumnType("int(8)")
                        .HasColumnName("reward");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("sku");

                    b.Property<decimal>("Tax")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("tax");

                    b.Property<decimal>("Total")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("total");

                    b.Property<string>("Upc")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("upc");

                    b.Property<decimal>("Weight")
                        .HasPrecision(15)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("weight");

                    b.HasKey("OrderProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "order_id")
                        .HasDatabaseName("order_id2");

                    b.HasIndex(new[] { "ProductId" }, "product_id")
                        .HasDatabaseName("product_id1");

                    b.ToTable("oc_order_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderRecurring", b =>
                {
                    b.Property<int>("OrderRecurringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_recurring_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("product_name");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_quantity");

                    b.Property<short>("RecurringCycle")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("recurring_cycle");

                    b.Property<string>("RecurringDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("recurring_description");

                    b.Property<short>("RecurringDuration")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("recurring_duration");

                    b.Property<string>("RecurringFrequency")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("recurring_frequency");

                    b.Property<int>("RecurringId")
                        .HasColumnType("int(11)")
                        .HasColumnName("recurring_id");

                    b.Property<string>("RecurringName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("recurring_name");

                    b.Property<decimal>("RecurringPrice")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("recurring_price");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reference");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status");

                    b.Property<bool>("Trial")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("trial");

                    b.Property<short>("TrialCycle")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("trial_cycle");

                    b.Property<short>("TrialDuration")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("trial_duration");

                    b.Property<string>("TrialFrequency")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("trial_frequency");

                    b.Property<decimal>("TrialPrice")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("trial_price");

                    b.HasKey("OrderRecurringId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_order_recurring", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderRecurringTransaction", b =>
                {
                    b.Property<int>("OrderRecurringTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_recurring_transaction_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<int>("OrderRecurringId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_recurring_id");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reference");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.HasKey("OrderRecurringTransactionId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_order_recurring_transaction", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderSimpleField", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<string>("Metadata")
                        .HasColumnType("text")
                        .HasColumnName("metadata");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_order_simple_fields", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderStatus", b =>
                {
                    b.Property<int>("OrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_status_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.HasKey("OrderStatusId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_order_status", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderTotal", b =>
                {
                    b.Property<int>("OrderTotalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)")
                        .HasColumnName("order_total_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("code");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<decimal>("Value")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("value");

                    b.HasKey("OrderTotalId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OrderId" }, "order_id")
                        .HasDatabaseName("order_id3");

                    b.ToTable("oc_order_total", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcOrderVoucher", b =>
                {
                    b.Property<int>("OrderVoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_voucher_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("amount");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("FromEmail")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("from_email");

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("from_name");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<string>("ToEmail")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("to_email");

                    b.Property<string>("ToName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("to_name");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int(11)")
                        .HasColumnName("voucher_id");

                    b.Property<int>("VoucherThemeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("voucher_theme_id");

                    b.HasKey("OrderVoucherId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_order_voucher", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Cost")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("cost");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_available")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Ean")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ean");

                    b.Property<decimal>("Height")
                        .HasPrecision(15)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("height");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("isbn");

                    b.Property<string>("Jan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("jan");

                    b.Property<decimal>("Length")
                        .HasPrecision(15)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("length");

                    b.Property<int>("LengthClassId")
                        .HasColumnType("int(11)")
                        .HasColumnName("length_class_id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("location");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("manufacturer_id");

                    b.Property<int>("Minimum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("minimum")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("model");

                    b.Property<string>("Mpn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mpn");

                    b.Property<uint>("NixSupplierId")
                        .HasColumnType("int(3) unsigned")
                        .HasColumnName("nix_supplier_id");

                    b.Property<uint>("NixSupplierProductId")
                        .HasColumnType("int(11) unsigned")
                        .HasColumnName("nix_supplier_product_id");

                    b.Property<int>("Points")
                        .HasColumnType("int(8)")
                        .HasColumnName("points");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(4)")
                        .HasColumnName("quantity");

                    b.Property<bool?>("Shipping")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("shipping")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("sku");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("sort_order");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("StockStatusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("stock_status_id");

                    b.Property<bool?>("Subtract")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("subtract")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("SupplerCode")
                        .HasColumnType("int(2)")
                        .HasColumnName("suppler_code");

                    b.Property<int>("SupplerType")
                        .HasColumnType("int(2)")
                        .HasColumnName("suppler_type");

                    b.Property<int>("TaxClassId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tax_class_id");

                    b.Property<int>("UnitId")
                        .HasColumnType("int(11)")
                        .HasColumnName("unit_id");

                    b.Property<string>("Upc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("upc");

                    b.Property<int>("Viewed")
                        .HasColumnType("int(5)")
                        .HasColumnName("viewed");

                    b.Property<decimal>("Weight")
                        .HasPrecision(15)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("weight");

                    b.Property<int>("WeightClassId")
                        .HasColumnType("int(11)")
                        .HasColumnName("weight_class_id");

                    b.Property<decimal>("Width")
                        .HasPrecision(15)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("width");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NixSupplierProductId" }, "nix_supplier_product_id");

                    b.ToTable("oc_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductAttribute", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("ProductId", "AttributeId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_attribute", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductDescription", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_description");

                    b.Property<string>("MetaH1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_h1");

                    b.Property<string>("MetaKeyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_keyword");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_title");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tag");

                    b.HasKey("ProductId", "LanguageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .HasDatabaseName("name6");

                    b.ToTable("oc_product_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductDiscount", b =>
                {
                    b.Property<int>("ProductDiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_discount_id");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<DateTime>("DateEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_end")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<DateTime>("DateStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_start")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(5)")
                        .HasColumnName("priority")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(4)")
                        .HasColumnName("quantity");

                    b.HasKey("ProductDiscountId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "product_id")
                        .HasDatabaseName("product_id2");

                    b.ToTable("oc_product_discount", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductFilter", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("FilterId")
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_id");

                    b.HasKey("ProductId", "FilterId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_filter", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductImage", b =>
                {
                    b.Property<int>("ProductImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_image_id");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(3)")
                        .HasColumnName("sort_order");

                    b.HasKey("ProductImageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "product_id")
                        .HasDatabaseName("product_id3");

                    b.HasIndex(new[] { "SortOrder" }, "sort_order")
                        .HasDatabaseName("sort_order1");

                    b.ToTable("oc_product_image", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductOption", b =>
                {
                    b.Property<int>("ProductOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_option_id");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<bool>("Required")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("required");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("ProductOptionId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OptionId" }, "option_id")
                        .HasDatabaseName("option_id2");

                    b.HasIndex(new[] { "ProductId" }, "product_id")
                        .HasDatabaseName("product_id4");

                    b.ToTable("oc_product_option", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductOptionValue", b =>
                {
                    b.Property<int>("ProductOptionValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_option_value_id");

                    b.Property<int>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int>("OptionValueId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_value_id");

                    b.Property<string>("Optsku")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("optsku");

                    b.Property<int>("Points")
                        .HasColumnType("int(8)")
                        .HasColumnName("points");

                    b.Property<string>("PointsPrefix")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("points_prefix");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<string>("PricePrefix")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("price_prefix");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("ProductOptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_option_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(3)")
                        .HasColumnName("quantity");

                    b.Property<bool>("Subtract")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("subtract");

                    b.Property<decimal>("Weight")
                        .HasPrecision(15)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("weight");

                    b.Property<string>("WeightPrefix")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("weight_prefix");

                    b.HasKey("ProductOptionValueId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "OptionId" }, "option_id")
                        .HasDatabaseName("option_id3");

                    b.HasIndex(new[] { "OptionValueId" }, "option_value_id");

                    b.HasIndex(new[] { "ProductId" }, "product_id")
                        .HasDatabaseName("product_id5");

                    b.HasIndex(new[] { "ProductOptionId" }, "product_option_id");

                    b.HasIndex(new[] { "Quantity" }, "quantity");

                    b.HasIndex(new[] { "Subtract" }, "subtract");

                    b.ToTable("oc_product_option_value", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductOwnerPriority", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("OwnerPriority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("owner_priority")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_owner_priority", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductRecurring", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("RecurringId")
                        .HasColumnType("int(11)")
                        .HasColumnName("recurring_id");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.HasKey("ProductId", "RecurringId", "CustomerGroupId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_recurring", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductRelated", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int(11)")
                        .HasColumnName("related_id");

                    b.HasKey("ProductId", "RelatedId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_related", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductReward", b =>
                {
                    b.Property<int>("ProductRewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_reward_id");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<int>("Points")
                        .HasColumnType("int(8)")
                        .HasColumnName("points");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.HasKey("ProductRewardId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CustomerGroupId" }, "customer_group_id");

                    b.HasIndex(new[] { "ProductId" }, "product_id")
                        .HasDatabaseName("product_id6");

                    b.ToTable("oc_product_reward", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductSpecial", b =>
                {
                    b.Property<int>("ProductSpecialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_special_id");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<DateTime>("DateEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_end")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<DateTime>("DateStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_start")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(5)")
                        .HasColumnName("priority")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.HasKey("ProductSpecialId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "product_id")
                        .HasDatabaseName("product_id7");

                    b.ToTable("oc_product_special", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToAttributeReserved", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.Property<int>("AttributableId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attributable_id");

                    b.Property<string>("AttributableType")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("attributable_type");

                    b.HasKey("ProductId", "AttributeId", "AttributableId", "AttributableType")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_to_attribute_reserved", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToAttributeToEnum", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.Property<int>("EnumId")
                        .HasColumnType("int(11)")
                        .HasColumnName("enum_id");

                    b.HasKey("ProductId", "AttributeId", "EnumId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_to_attribute_to_enum", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<bool>("MainCategory")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("main_category");

                    b.HasKey("ProductId", "CategoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "category_id")
                        .HasDatabaseName("category_id1");

                    b.ToTable("oc_product_to_category", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToDownload", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("DownloadId")
                        .HasColumnType("int(11)")
                        .HasColumnName("download_id");

                    b.HasKey("ProductId", "DownloadId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_to_download", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToLayout", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<int>("LayoutId")
                        .HasColumnType("int(11)")
                        .HasColumnName("layout_id");

                    b.HasKey("ProductId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_to_layout", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToPromProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("PromProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("prom_product_id");

                    b.HasKey("ProductId", "PromProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PromProductId" }, "prom_product_id");

                    b.ToTable("oc_product_to_prom_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToStore", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.HasKey("ProductId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_to_store", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToSupplier", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<string>("SupplierId")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("supplier_id");

                    b.HasKey("ProductId", "SupplierId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SupplierId" }, "supplier_id");

                    b.ToTable("oc_product_to_supplier", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcProductToTranslate", b =>
                {
                    b.Property<int>("TranslateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("translate_id");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("date")
                        .HasColumnName("trans_date");

                    b.Property<int>("TransProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("trans_product_id");

                    b.Property<int>("TransStatus")
                        .HasColumnType("int(11)")
                        .HasColumnName("trans_status");

                    b.HasKey("TranslateId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_product_to_translate", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcPromCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("ParentId")
                        .HasColumnType("int(11)")
                        .HasColumnName("parent_id");

                    b.HasKey("CategoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ParentId" }, "parent_id")
                        .HasDatabaseName("parent_id1");

                    b.ToTable("oc_prom_category", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcPromCategoryDescription", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("CategoryId", "LanguageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Name" }, "name")
                        .HasDatabaseName("name7");

                    b.ToTable("oc_prom_category_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcPromId", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<string>("PromId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("prom_id");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_prom_id", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRecurring", b =>
                {
                    b.Property<int>("RecurringId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("recurring_id");

                    b.Property<uint>("Cycle")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("cycle");

                    b.Property<uint>("Duration")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("duration");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("enum('day','week','semi_month','month','year')")
                        .HasColumnName("frequency");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("price");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("sort_order");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status");

                    b.Property<uint>("TrialCycle")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("trial_cycle");

                    b.Property<uint>("TrialDuration")
                        .HasColumnType("int(10) unsigned")
                        .HasColumnName("trial_duration");

                    b.Property<string>("TrialFrequency")
                        .IsRequired()
                        .HasColumnType("enum('day','week','semi_month','month','year')")
                        .HasColumnName("trial_frequency");

                    b.Property<decimal>("TrialPrice")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("trial_price");

                    b.Property<sbyte>("TrialStatus")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("trial_status");

                    b.HasKey("RecurringId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_recurring", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRecurringDescription", b =>
                {
                    b.Property<int>("RecurringId")
                        .HasColumnType("int(11)")
                        .HasColumnName("recurring_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("RecurringId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_recurring_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRedirect", b =>
                {
                    b.Property<int>("RedirectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("redirect_id");

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("DateEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_end")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<DateTime?>("DateStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_start")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<string>("FromUrl")
                        .HasColumnType("text")
                        .HasColumnName("from_url");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int?>("ResponseCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(3)")
                        .HasColumnName("response_code")
                        .HasDefaultValueSql("'301'");

                    b.Property<int?>("TimesUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(5)")
                        .HasColumnName("times_used")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("ToUrl")
                        .HasColumnType("text")
                        .HasColumnName("to_url");

                    b.HasKey("RedirectId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_redirect", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelated", b =>
                {
                    b.Property<int>("RelatedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("related_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<string>("RelatedProductStrId")
                        .HasColumnType("text")
                        .HasColumnName("related_product_str_id");

                    b.Property<string>("RelatedTitle")
                        .HasColumnType("text")
                        .HasColumnName("related_title");

                    b.HasKey("RelatedId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_related", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelatedoption", b =>
                {
                    b.Property<int>("RelatedoptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_id");

                    b.Property<bool?>("Defaultselect")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("defaultselect");

                    b.Property<int?>("Defaultselectpriority")
                        .HasColumnType("int(11)")
                        .HasColumnName("defaultselectpriority");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Ean")
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("ean");

                    b.Property<string>("Location")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("location");

                    b.Property<string>("Model")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("model");

                    b.Property<decimal?>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<string>("PricePrefix")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("price_prefix");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int(4)")
                        .HasColumnName("quantity");

                    b.Property<int?>("RelatedoptionsVariantProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_variant_product_id");

                    b.Property<string>("Sku")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("sku");

                    b.Property<int?>("StockStatusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("stock_status_id");

                    b.Property<string>("Upc")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("upc");

                    b.Property<decimal?>("Weight")
                        .HasPrecision(15, 8)
                        .HasColumnType("decimal(15,8)")
                        .HasColumnName("weight");

                    b.Property<string>("WeightPrefix")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("weight_prefix");

                    b.HasKey("RelatedoptionsId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_relatedoptions", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelatedoptionsDiscount", b =>
                {
                    b.Property<int?>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<decimal?>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<int?>("Priority")
                        .HasColumnType("int(5)")
                        .HasColumnName("priority");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int(4)")
                        .HasColumnName("quantity");

                    b.Property<int?>("RelatedoptionsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_id");

                    b.ToTable("oc_relatedoptions_discount", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelatedoptionsOption", b =>
                {
                    b.Property<int?>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int?>("OptionValueId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_value_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int?>("RelatedoptionsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_id");

                    b.ToTable("oc_relatedoptions_option", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelatedoptionsSpecial", b =>
                {
                    b.Property<int?>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.Property<decimal?>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<int?>("Priority")
                        .HasColumnType("int(5)")
                        .HasColumnName("priority");

                    b.Property<int?>("RelatedoptionsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_id");

                    b.ToTable("oc_relatedoptions_special", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelatedoptionsToChar", b =>
                {
                    b.Property<string>("CharId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("char_id");

                    b.Property<int?>("RelatedoptionsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_id");

                    b.ToTable("oc_relatedoptions_to_char", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelatedoptionsVariant", b =>
                {
                    b.Property<int>("RelatedoptionsVariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_variant_id");

                    b.Property<string>("RelatedoptionsVariantName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("relatedoptions_variant_name");

                    b.HasKey("RelatedoptionsVariantId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_relatedoptions_variant", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelatedoptionsVariantOption", b =>
                {
                    b.Property<int?>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<int?>("RelatedoptionsVariantId")
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_variant_id");

                    b.ToTable("oc_relatedoptions_variant_option", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRelatedoptionsVariantProduct", b =>
                {
                    b.Property<int>("RelatedoptionsVariantProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_variant_product_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<bool?>("RelatedoptionsUse")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("relatedoptions_use");

                    b.Property<int?>("RelatedoptionsVariantId")
                        .HasColumnType("int(11)")
                        .HasColumnName("relatedoptions_variant_id");

                    b.HasKey("RelatedoptionsVariantProductId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_relatedoptions_variant_product", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcRemarketingOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Dclid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dclid");

                    b.Property<DateTime>("Ecommerce")
                        .HasColumnType("datetime")
                        .HasColumnName("ecommerce");

                    b.Property<DateTime>("EcommerceGa4")
                        .HasColumnType("datetime")
                        .HasColumnName("ecommerce_ga4");

                    b.Property<DateTime>("Esputnik")
                        .HasColumnType("datetime")
                        .HasColumnName("esputnik");

                    b.Property<DateTime>("Facebook")
                        .HasColumnType("datetime")
                        .HasColumnName("facebook");

                    b.Property<DateTime>("FacebookLead")
                        .HasColumnType("datetime")
                        .HasColumnName("facebook_lead");

                    b.Property<string>("FbEventId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fb_event_id");

                    b.Property<string>("FbLeadEventId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fb_lead_event_id");

                    b.Property<string>("Fbc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fbc");

                    b.Property<string>("Fbclid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fbclid");

                    b.Property<string>("Fbp")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fbp");

                    b.Property<string>("Ga4Uuid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ga4_uuid");

                    b.Property<string>("Gclid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("gclid");

                    b.Property<string>("OrderData")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("order_data");

                    b.Property<DateTime>("SuccessPage")
                        .HasColumnType("datetime")
                        .HasColumnName("success_page");

                    b.Property<DateTime>("Telegram")
                        .HasColumnType("datetime")
                        .HasColumnName("telegram");

                    b.Property<DateTime>("Tiktok")
                        .HasColumnType("datetime")
                        .HasColumnName("tiktok");

                    b.Property<string>("TtEventId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tt_event_id");

                    b.Property<string>("Ttclid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ttclid");

                    b.Property<string>("UtmCampaign")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("utm_campaign");

                    b.Property<string>("UtmContent")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("utm_content");

                    b.Property<string>("UtmMedium")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("utm_medium");

                    b.Property<string>("UtmSource")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("utm_source");

                    b.Property<string>("UtmTerm")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("utm_term");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("uuid");

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_remarketing_orders", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcReturn", b =>
                {
                    b.Property<int>("ReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("return_id");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<DateTime>("DateOrdered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_ordered")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("model");

                    b.Property<bool>("Opened")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("opened");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("product");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(4)")
                        .HasColumnName("quantity");

                    b.Property<int>("ReturnActionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("return_action_id");

                    b.Property<int>("ReturnReasonId")
                        .HasColumnType("int(11)")
                        .HasColumnName("return_reason_id");

                    b.Property<int>("ReturnStatusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("return_status_id");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("telephone");

                    b.HasKey("ReturnId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_return", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcReturnAction", b =>
                {
                    b.Property<int>("ReturnActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("return_action_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("ReturnActionId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_return_action", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcReturnHistory", b =>
                {
                    b.Property<int>("ReturnHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("return_history_id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<bool>("Notify")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("notify");

                    b.Property<int>("ReturnId")
                        .HasColumnType("int(11)")
                        .HasColumnName("return_id");

                    b.Property<int>("ReturnStatusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("return_status_id");

                    b.HasKey("ReturnHistoryId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_return_history", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcReturnReason", b =>
                {
                    b.Property<int>("ReturnReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("return_reason_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("ReturnReasonId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_return_reason", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcReturnStatus", b =>
                {
                    b.Property<int>("ReturnStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("return_status_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("ReturnStatusId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_return_status", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("review_id");

                    b.Property<string>("AdminReply")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("admin_reply");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("author");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Minus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("minus");

                    b.Property<string>("Plus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("plus");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("int(1)")
                        .HasColumnName("rating");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("ReviewId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "product_id")
                        .HasDatabaseName("product_id8");

                    b.ToTable("oc_review", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSeoTagsGenerator", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("key");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(2)")
                        .HasColumnName("language_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasIndex(new[] { "CategoryId" }, "category_id");

                    b.HasIndex(new[] { "Key" }, "key");

                    b.HasIndex(new[] { "LanguageId" }, "language_id");

                    b.ToTable("oc_seo_tags_generator", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSeoTagsGeneratorCategoryCopy", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("CopyCategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("copy_category_id");

                    b.HasKey("CategoryId", "CopyCategoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CopyCategoryId" }, "copy_category_id");

                    b.ToTable("oc_seo_tags_generator_category_copy", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSeoTagsGeneratorCategoryDeclension", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(3)")
                        .HasColumnName("language_id");

                    b.Property<string>("CategoryNamePluralGenitive")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_name_plural_genitive");

                    b.Property<string>("CategoryNamePluralNominative")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_name_plural_nominative");

                    b.Property<string>("CategoryNameSingularNominative")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("category_name_singular_nominative");

                    b.HasKey("CategoryId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_seo_tags_generator_category_declension", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSeoTagsGeneratorCategorySetting", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<string>("Setting")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("setting");

                    b.HasIndex(new[] { "CategoryId" }, "category_id")
                        .IsUnique();

                    b.ToTable("oc_seo_tags_generator_category_setting", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSeoTagsGeneratorNotUse", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("EssenceId")
                        .HasColumnType("int(1)")
                        .HasColumnName("essence_id");

                    b.HasKey("Id", "EssenceId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_seo_tags_generator_not_use", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSetting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("setting_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("code");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("key");

                    b.Property<bool>("Serialized")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("serialized");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .HasColumnName("value");

                    b.HasKey("SettingId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Key" }, "key");

                    b.HasIndex(new[] { "Serialized" }, "serialized");

                    b.HasIndex(new[] { "StoreId" }, "store_id");

                    b.ToTable("oc_setting", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSimpleCart", b =>
                {
                    b.Property<int>("SimpleCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("simple_cart_id");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Email")
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<string>("Products")
                        .HasColumnType("text")
                        .HasColumnName("products");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Telephone")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("telephone");

                    b.HasKey("SimpleCartId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_simple_cart", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcStockStatus", b =>
                {
                    b.Property<int>("StockStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("stock_status_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.HasKey("StockStatusId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_stock_status", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcStore", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<string>("Ssl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ssl");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url");

                    b.HasKey("StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_store", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSuppler", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)")
                        .HasColumnName("form_id");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("ad");

                    b.Property<string>("Addattr")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("addattr");

                    b.Property<string>("Addopt")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("addopt");

                    b.Property<string>("Addseo")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("addseo");

                    b.Property<string>("Bonus")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("bonus");

                    b.Property<string>("Bprice")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("bprice");

                    b.Property<string>("Cat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cat");

                    b.Property<string>("Catcreate")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("catcreate");

                    b.Property<string>("Chcode")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("chcode");

                    b.Property<string>("Cheap")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("cheap");

                    b.Property<string>("Cod")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("cod");

                    b.Property<int>("Codedonor")
                        .HasColumnType("int(1)")
                        .HasColumnName("codedonor");

                    b.Property<int>("Codeprice")
                        .HasColumnType("int(1)")
                        .HasColumnName("codeprice");

                    b.Property<string>("Cprice")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cprice");

                    b.Property<string>("Ddata")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ddata");

                    b.Property<string>("Ddesc")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ddesc");

                    b.Property<string>("Delimiter")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("delimiter");

                    b.Property<string>("Descrip")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("descrip");

                    b.Property<string>("Disc")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("disc");

                    b.Property<string>("Ean")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ean");

                    b.Property<string>("Exsame")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("exsame");

                    b.Property<string>("Ffile")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ffile");

                    b.Property<DateTime?>("Formdate")
                        .HasColumnType("datetime")
                        .HasColumnName("formdate");

                    b.Property<string>("Height")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("height");

                    b.Property<string>("Hide")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("hide");

                    b.Property<string>("Idcat")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("idcat");

                    b.Property<string>("Importseo")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("importseo");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("isbn");

                    b.Property<string>("Item")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("item");

                    b.Property<string>("Jan")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("jan");

                    b.Property<string>("Joen")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("joen");

                    b.Property<int>("Jopt")
                        .HasColumnType("int(2)")
                        .HasColumnName("jopt");

                    b.Property<string>("Kmenu")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("kmenu");

                    b.Property<string>("Lang")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("lang");

                    b.Property<string>("Length")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("length");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("location");

                    b.Property<int?>("Main")
                        .HasColumnType("int(1)")
                        .HasColumnName("main");

                    b.Property<string>("Manuf")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("manuf");

                    b.Property<string>("Metka")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("metka");

                    b.Property<int?>("Minopt")
                        .HasColumnType("int(1)")
                        .HasColumnName("minopt");

                    b.Property<string>("Minus")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("minus");

                    b.Property<int>("Model")
                        .HasColumnType("int(1)")
                        .HasColumnName("model");

                    b.Property<string>("Mpn")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("mpn");

                    b.Property<string>("MyCat")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("my_cat");

                    b.Property<string>("MyDescrip")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("my_descrip");

                    b.Property<string>("MyManuf")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("my_manuf");

                    b.Property<string>("MyMark")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("my_mark");

                    b.Property<string>("MyPhoto")
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("my_photo");

                    b.Property<int?>("MyPrice")
                        .HasColumnType("int(2)")
                        .HasColumnName("my_price");

                    b.Property<string>("MyQu")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("my_qu");

                    b.Property<string>("Myplus")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("myplus");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<int>("Newonly")
                        .HasColumnType("int(1)")
                        .HasColumnName("newonly");

                    b.Property<string>("Newphoto")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("newphoto");

                    b.Property<string>("Newproduct")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("newproduct");

                    b.Property<string>("Newurl")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("newurl");

                    b.Property<string>("Off")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("off");

                    b.Property<string>("Onn")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("onn");

                    b.Property<string>("Onoff")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("onoff");

                    b.Property<string>("OptFotos")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("opt_fotos");

                    b.Property<string>("OptPrices")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("opt_prices");

                    b.Property<string>("Optsku")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("optsku");

                    b.Property<string>("Parent")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("parent");

                    b.Property<string>("Parsc")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("parsc");

                    b.Property<string>("Parsd")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("parsd");

                    b.Property<string>("Parsi")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("parsi");

                    b.Property<string>("Parsk")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("parsk");

                    b.Property<string>("Parsm")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("parsm");

                    b.Property<string>("Parsp")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("parsp");

                    b.Property<string>("Parsq")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("parsq");

                    b.Property<string>("Parss")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("parss");

                    b.Property<string>("PicExt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pic_ext");

                    b.Property<string>("Placec")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("placec");

                    b.Property<string>("Placed")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("placed");

                    b.Property<string>("Placei")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("placei");

                    b.Property<string>("Placem")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("placem");

                    b.Property<string>("Placep")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("placep");

                    b.Property<string>("Placeq")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("placeq");

                    b.Property<string>("Places")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("places");

                    b.Property<string>("Plusopt")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("plusopt");

                    b.Property<string>("Pmanuf")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("pmanuf");

                    b.Property<string>("Pointc")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("pointc");

                    b.Property<string>("Pointd")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("pointd");

                    b.Property<string>("Pointi")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("pointi");

                    b.Property<string>("Pointm")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("pointm");

                    b.Property<string>("Pointp")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("pointp");

                    b.Property<string>("Pointq")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("pointq");

                    b.Property<string>("Points")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("points");

                    b.Property<string>("Price")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("price");

                    b.Property<string>("Qu")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("qu");

                    b.Property<string>("QuDiscount")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("qu_discount");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("rate");

                    b.Property<decimal?>("Ratek")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("ratek");

                    b.Property<string>("Ratep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ratep");

                    b.Property<string>("Ref")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("ref");

                    b.Property<string>("Ref1")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("ref1");

                    b.Property<string>("Ref2")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("ref2");

                    b.Property<string>("Ref3")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("ref3");

                    b.Property<string>("Refer")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("refer");

                    b.Property<string>("Related")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("related");

                    b.Property<string>("Rprice")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("rprice");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("serie");

                    b.Property<string>("Sku2")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("sku2");

                    b.Property<string>("Skuprefix")
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("skuprefix");

                    b.Property<string>("Sleep")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sleep");

                    b.Property<string>("Sorder")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("sorder");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int(13)")
                        .HasColumnName("sort_order");

                    b.Property<string>("Spec")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("spec");

                    b.Property<int?>("Status")
                        .HasColumnType("int(2)")
                        .HasColumnName("status");

                    b.Property<string>("Stay")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("stay");

                    b.Property<string>("Subfolder")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("subfolder");

                    b.Property<int?>("SupplerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("suppler_id");

                    b.Property<string>("TRef")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("t_ref");

                    b.Property<string>("TRef1")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("t_ref1");

                    b.Property<string>("TRef2")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("t_ref2");

                    b.Property<string>("TRef3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("t_ref3");

                    b.Property<string>("TStatus")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("t_status");

                    b.Property<string>("Termin")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("termin");

                    b.Property<string>("Umanuf")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("umanuf");

                    b.Property<string>("Upattr")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("upattr");

                    b.Property<string>("Upc")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("upc");

                    b.Property<string>("Updte")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("updte");

                    b.Property<string>("Upname")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("upname");

                    b.Property<string>("Upopt")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("upopt");

                    b.Property<string>("Upurl")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("upurl");

                    b.Property<string>("Usd")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("usd");

                    b.Property<string>("Warranty")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("warranty");

                    b.Property<string>("Weight")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("weight");

                    b.Property<string>("Width")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("width");

                    b.Property<string>("Zero")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("zero");

                    b.HasKey("FormId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerAttribute", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<string>("AttrExt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("attr_ext");

                    b.Property<string>("AttrPoint")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("attr_point");

                    b.Property<int?>("AttributeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("attribute_id");

                    b.Property<int?>("FilterGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("filter_group_id");

                    b.Property<int?>("FormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("form_id");

                    b.Property<string>("Tags")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tags");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_attributes", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerBasePrice", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<decimal?>("Bav")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("bav");

                    b.Property<decimal?>("Bdisc")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("bdisc");

                    b.Property<decimal?>("Bmax")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("bmax");

                    b.Property<decimal?>("Bmin")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("bmin");

                    b.Property<int?>("Bpack")
                        .HasColumnType("int(11)")
                        .HasColumnName("bpack");

                    b.Property<decimal?>("Bprice")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("bprice");

                    b.Property<decimal?>("Brate")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("brate");

                    b.Property<string>("Bsuppler")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("bsuppler");

                    b.Property<decimal?>("MarketPercentToBdprice")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal(6,3)")
                        .HasColumnName("market_percent_to_bdprice");

                    b.Property<decimal?>("MarketPercentToBprice")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal(6,3)")
                        .HasColumnName("market_percent_to_bprice");

                    b.Property<decimal?>("MarketPercentToPrice")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal(6,3)")
                        .HasColumnName("market_percent_to_price");

                    b.Property<string>("Model")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("model");

                    b.Property<decimal?>("Optimal")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("optimal");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_base_price", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerCron", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<string>("ActChange")
                        .HasColumnType("text")
                        .HasColumnName("act_change");

                    b.Property<string>("ActChange1")
                        .HasColumnType("text")
                        .HasColumnName("act_change1");

                    b.Property<string>("ActChange2")
                        .HasColumnType("text")
                        .HasColumnName("act_change2");

                    b.Property<string>("ActChange3")
                        .HasColumnType("text")
                        .HasColumnName("act_change3");

                    b.Property<string>("ActChange4")
                        .HasColumnType("text")
                        .HasColumnName("act_change4");

                    b.Property<string>("ActChange5")
                        .HasColumnType("text")
                        .HasColumnName("act_change5");

                    b.Property<string>("ActChange6")
                        .HasColumnType("text")
                        .HasColumnName("act_change6");

                    b.Property<string>("ActChange7")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("act_change7");

                    b.Property<string>("ActChange8")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("act_change8");

                    b.Property<string>("ActChange9")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("act_change9");

                    b.Property<string>("ActFind")
                        .HasColumnType("text")
                        .HasColumnName("act_find");

                    b.Property<string>("ActFind1")
                        .HasColumnType("text")
                        .HasColumnName("act_find1");

                    b.Property<string>("ActFind2")
                        .HasColumnType("text")
                        .HasColumnName("act_find2");

                    b.Property<string>("ActFind3")
                        .HasColumnType("text")
                        .HasColumnName("act_find3");

                    b.Property<string>("ActFind4")
                        .HasColumnType("text")
                        .HasColumnName("act_find4");

                    b.Property<string>("ActFind5")
                        .HasColumnType("text")
                        .HasColumnName("act_find5");

                    b.Property<string>("ActFind6")
                        .HasColumnType("text")
                        .HasColumnName("act_find6");

                    b.Property<string>("ActFind7")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("act_find7");

                    b.Property<string>("ActFind8")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("act_find8");

                    b.Property<string>("ActFind9")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("act_find9");

                    b.Property<int?>("All0")
                        .HasColumnType("int(1)")
                        .HasColumnName("all0");

                    b.Property<int?>("All1")
                        .HasColumnType("int(1)")
                        .HasColumnName("all1");

                    b.Property<int?>("All2")
                        .HasColumnType("int(1)")
                        .HasColumnName("all2");

                    b.Property<int?>("All3")
                        .HasColumnType("int(1)")
                        .HasColumnName("all3");

                    b.Property<int?>("All4")
                        .HasColumnType("int(1)")
                        .HasColumnName("all4");

                    b.Property<int?>("All5")
                        .HasColumnType("int(1)")
                        .HasColumnName("all5");

                    b.Property<int?>("All6")
                        .HasColumnType("int(1)")
                        .HasColumnName("all6");

                    b.Property<int>("All7")
                        .HasColumnType("int(1)")
                        .HasColumnName("all7");

                    b.Property<int>("All8")
                        .HasColumnType("int(1)")
                        .HasColumnName("all8");

                    b.Property<int>("All9")
                        .HasColumnType("int(1)")
                        .HasColumnName("all9");

                    b.Property<int?>("Cmd")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd");

                    b.Property<int?>("Cmd1")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd1");

                    b.Property<int?>("Cmd2")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd2");

                    b.Property<int?>("Cmd3")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd3");

                    b.Property<int?>("Cmd4")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd4");

                    b.Property<int?>("Cmd5")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd5");

                    b.Property<int?>("Cmd6")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd6");

                    b.Property<int>("Cmd7")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd7");

                    b.Property<int>("Cmd8")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd8");

                    b.Property<int>("Cmd9")
                        .HasColumnType("int(1)")
                        .HasColumnName("cmd9");

                    b.Property<int?>("CronStatus")
                        .HasColumnType("int(11)")
                        .HasColumnName("cron_status");

                    b.Property<int?>("Csort")
                        .HasColumnType("int(3)")
                        .HasColumnName("csort");

                    b.Property<DateTime?>("Ctime")
                        .HasColumnType("date")
                        .HasColumnName("ctime");

                    b.Property<DateTime?>("Ctime1")
                        .HasColumnType("date")
                        .HasColumnName("ctime1");

                    b.Property<int?>("Errors")
                        .HasColumnType("int(5)")
                        .HasColumnName("errors");

                    b.Property<int?>("Ext")
                        .HasColumnType("int(1)")
                        .HasColumnName("ext");

                    b.Property<int?>("Flag")
                        .HasColumnType("int(1)")
                        .HasColumnName("flag");

                    b.Property<int?>("Flag1")
                        .HasColumnType("int(1)")
                        .HasColumnName("flag1");

                    b.Property<int?>("FormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("form_id");

                    b.Property<string>("FtpName")
                        .HasColumnType("text")
                        .HasColumnName("ftp_name");

                    b.Property<string>("FtpPass")
                        .HasColumnType("text")
                        .HasColumnName("ftp_pass");

                    b.Property<int?>("Go")
                        .HasColumnType("int(1)")
                        .HasColumnName("go");

                    b.Property<string>("Imap")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("imap");

                    b.Property<string>("Ip")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("ip");

                    b.Property<string>("Ip1")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("ip1");

                    b.Property<string>("Isno")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno");

                    b.Property<string>("Isno1")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno1");

                    b.Property<string>("Isno2")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno2");

                    b.Property<string>("Isno3")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno3");

                    b.Property<string>("Isno4")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno4");

                    b.Property<string>("Isno5")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno5");

                    b.Property<string>("Isno6")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno6");

                    b.Property<string>("Isno7")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno7");

                    b.Property<string>("Isno8")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno8");

                    b.Property<string>("Isno9")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("isno9");

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link");

                    b.Property<string>("Mail")
                        .HasColumnType("text")
                        .HasColumnName("mail");

                    b.Property<int?>("OnOff")
                        .HasColumnType("int(1)")
                        .HasColumnName("on_off");

                    b.Property<int?>("PlStatus")
                        .HasColumnType("int(1)")
                        .HasColumnName("pl_status");

                    b.Property<string>("Pop3")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("pop3");

                    b.Property<string>("Port")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("port");

                    b.Property<string>("Port1")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("port1");

                    b.Property<string>("PrName")
                        .HasColumnType("text")
                        .HasColumnName("pr_name");

                    b.Property<int?>("Report")
                        .HasColumnType("int(5)")
                        .HasColumnName("report");

                    b.Property<int?>("Rtype")
                        .HasColumnType("int(1)")
                        .HasColumnName("rtype");

                    b.Property<int?>("SaveBrTime")
                        .HasColumnType("int(11)")
                        .HasColumnName("save_br_time");

                    b.Property<int?>("SaveForm")
                        .HasColumnType("int(11)")
                        .HasColumnName("save_form");

                    b.Property<int?>("SaveNom")
                        .HasColumnType("int(11)")
                        .HasColumnName("save_nom");

                    b.Property<int?>("SaveOnOff")
                        .HasColumnType("int(1)")
                        .HasColumnName("save_on_off");

                    b.Property<string>("Smtp")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("smtp");

                    b.Property<int?>("SupplerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("suppler_id");

                    b.Property<int?>("Task")
                        .HasColumnType("int(1)")
                        .HasColumnName("task");

                    b.Property<string>("Text")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("text");

                    b.Property<string>("Text1")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("text1");

                    b.Property<string>("Text2")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("text2");

                    b.Property<string>("User")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("user");

                    b.Property<string>("User1")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("user1");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_cron", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerDatum", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<string>("CatExt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cat_ext");

                    b.Property<string>("CatPlus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cat_plus");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.Property<int?>("FormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("form_id");

                    b.Property<string>("PicInt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pic_int");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_data", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerOption", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<string>("Art")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("art");

                    b.Property<int?>("FormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("form_id");

                    b.Property<string>("Foto")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("foto");

                    b.Property<string>("Ko")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("ko");

                    b.Property<string>("Opt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("opt");

                    b.Property<string>("OptMargin")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("opt_margin");

                    b.Property<string>("OptPoint")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("opt_point");

                    b.Property<string>("OptPref")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("opt_pref");

                    b.Property<int?>("OptionId")
                        .HasColumnType("int(11)")
                        .HasColumnName("option_id");

                    b.Property<string>("OptionRequired")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("option_required");

                    b.Property<string>("Po")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("po");

                    b.Property<string>("Pr")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("pr");

                    b.Property<string>("We")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("we");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_options", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerPrice", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<int?>("Baseprice")
                        .HasColumnType("int(1)")
                        .HasColumnName("baseprice");

                    b.Property<int?>("FormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("form_id");

                    b.Property<string>("Ident")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("ident");

                    b.Property<decimal?>("Mratek")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("mratek");

                    b.Property<string>("Nom")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("nom");

                    b.Property<string>("Noprice")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("noprice");

                    b.Property<string>("Param")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("param");

                    b.Property<string>("Paramnp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("paramnp");

                    b.Property<string>("Point")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("point");

                    b.Property<string>("Pointnp")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("pointnp");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_price", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerRef", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<string>("Ident")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("ident");

                    b.Property<decimal?>("Price")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("price");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<string>("Url")
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_ref", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerSeo", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<string>("CatDesc")
                        .HasColumnType("text")
                        .HasColumnName("cat_desc");

                    b.Property<string>("CatH1")
                        .HasColumnType("text")
                        .HasColumnName("cat_h1");

                    b.Property<string>("CatKeyword")
                        .HasColumnType("text")
                        .HasColumnName("cat_keyword");

                    b.Property<string>("CatMetaDesc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cat_meta_desc");

                    b.Property<string>("CatTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cat_title");

                    b.Property<int?>("FormId")
                        .HasColumnType("int(11)")
                        .HasColumnName("form_id");

                    b.Property<string>("ManufDesc")
                        .HasColumnType("text")
                        .HasColumnName("manuf_desc");

                    b.Property<string>("ManufH1")
                        .HasColumnType("text")
                        .HasColumnName("manuf_h1");

                    b.Property<string>("ManufKeyword")
                        .HasColumnType("text")
                        .HasColumnName("manuf_keyword");

                    b.Property<string>("ManufMetaDesc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("manuf_meta_desc");

                    b.Property<string>("ManufTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("manuf_title");

                    b.Property<string>("ProdDesc")
                        .HasColumnType("text")
                        .HasColumnName("prod_desc");

                    b.Property<string>("ProdH1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prod_h1");

                    b.Property<string>("ProdKeyword")
                        .HasColumnType("text")
                        .HasColumnName("prod_keyword");

                    b.Property<string>("ProdMetaDesc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prod_meta_desc");

                    b.Property<string>("ProdPhoto")
                        .HasColumnType("text")
                        .HasColumnName("prod_photo");

                    b.Property<string>("ProdTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prod_title");

                    b.Property<string>("ProdUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prod_url");

                    b.Property<string>("Seo1")
                        .HasColumnType("text")
                        .HasColumnName("seo_1");

                    b.Property<string>("Seo10")
                        .HasColumnType("text")
                        .HasColumnName("seo_10");

                    b.Property<string>("Seo11")
                        .HasColumnType("text")
                        .HasColumnName("seo_11");

                    b.Property<string>("Seo12")
                        .HasColumnType("text")
                        .HasColumnName("seo_12");

                    b.Property<string>("Seo13")
                        .HasColumnType("text")
                        .HasColumnName("seo_13");

                    b.Property<string>("Seo14")
                        .HasColumnType("text")
                        .HasColumnName("seo_14");

                    b.Property<string>("Seo15")
                        .HasColumnType("text")
                        .HasColumnName("seo_15");

                    b.Property<string>("Seo16")
                        .HasColumnType("text")
                        .HasColumnName("seo_16");

                    b.Property<string>("Seo17")
                        .HasColumnType("text")
                        .HasColumnName("seo_17");

                    b.Property<string>("Seo18")
                        .HasColumnType("text")
                        .HasColumnName("seo_18");

                    b.Property<string>("Seo19")
                        .HasColumnType("text")
                        .HasColumnName("seo_19");

                    b.Property<string>("Seo2")
                        .HasColumnType("text")
                        .HasColumnName("seo_2");

                    b.Property<string>("Seo20")
                        .HasColumnType("text")
                        .HasColumnName("seo_20");

                    b.Property<string>("Seo3")
                        .HasColumnType("text")
                        .HasColumnName("seo_3");

                    b.Property<string>("Seo4")
                        .HasColumnType("text")
                        .HasColumnName("seo_4");

                    b.Property<string>("Seo5")
                        .HasColumnType("text")
                        .HasColumnName("seo_5");

                    b.Property<string>("Seo6")
                        .HasColumnType("text")
                        .HasColumnName("seo_6");

                    b.Property<string>("Seo7")
                        .HasColumnType("text")
                        .HasColumnName("seo_7");

                    b.Property<string>("Seo8")
                        .HasColumnType("text")
                        .HasColumnName("seo_8");

                    b.Property<string>("Seo9")
                        .HasColumnType("text")
                        .HasColumnName("seo_9");

                    b.Property<string>("SeoR1")
                        .HasColumnType("text")
                        .HasColumnName("seo_r1");

                    b.Property<string>("SeoR2")
                        .HasColumnType("text")
                        .HasColumnName("seo_r2");

                    b.Property<string>("SeoR3")
                        .HasColumnType("text")
                        .HasColumnName("seo_r3");

                    b.Property<string>("SeoR4")
                        .HasColumnType("text")
                        .HasColumnName("seo_r4");

                    b.Property<string>("SeoR5")
                        .HasColumnType("text")
                        .HasColumnName("seo_r5");

                    b.Property<string>("SeoR6")
                        .HasColumnType("text")
                        .HasColumnName("seo_r6");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_seo", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerSku", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int?>("SkuId")
                        .HasColumnType("int(11)")
                        .HasColumnName("sku_id");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_sku", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcSupplerSkuDescription", b =>
                {
                    b.Property<int>("NomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("nom_id");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("sku");

                    b.Property<int?>("SkuId")
                        .HasColumnType("int(11)")
                        .HasColumnName("sku_id");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int(2)")
                        .HasColumnName("store_id");

                    b.HasKey("NomId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_suppler_sku_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcTaxClass", b =>
                {
                    b.Property<int>("TaxClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("tax_class_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("title");

                    b.HasKey("TaxClassId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_tax_class", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcTaxRate", b =>
                {
                    b.Property<int>("TaxRateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("tax_rate_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<int>("GeoZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("geo_zone_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.Property<decimal>("Rate")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("rate");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("type")
                        .IsFixedLength();

                    b.HasKey("TaxRateId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_tax_rate", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcTaxRateToCustomerGroup", b =>
                {
                    b.Property<int>("TaxRateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tax_rate_id");

                    b.Property<int>("CustomerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_group_id");

                    b.HasKey("TaxRateId", "CustomerGroupId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_tax_rate_to_customer_group", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcTaxRule", b =>
                {
                    b.Property<int>("TaxRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("tax_rule_id");

                    b.Property<string>("Based")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("based");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(5)")
                        .HasColumnName("priority")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("TaxClassId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tax_class_id");

                    b.Property<int>("TaxRateId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tax_rate_id");

                    b.HasKey("TaxRuleId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_tax_rule", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcTheme", b =>
                {
                    b.Property<int>("ThemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("theme_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("route");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("theme");

                    b.HasKey("ThemeId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_theme", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcTranslation", b =>
                {
                    b.Property<int>("TranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("translation_id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("key");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("route");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("TranslationId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_translation", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniBannerInCategory", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("banner_id");

                    b.Property<DateTime>("DateEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_end")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<DateTime>("DateStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date_start")
                        .HasDefaultValueSql("'0000-00-00'");

                    b.Property<int>("Height")
                        .HasColumnType("int(11)")
                        .HasColumnName("height");

                    b.Property<int>("Position")
                        .HasColumnType("int(11)")
                        .HasColumnName("position");

                    b.Property<int>("Position2")
                        .HasColumnType("int(11)")
                        .HasColumnName("position2");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<sbyte>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("type")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("Width")
                        .HasColumnType("int(11)")
                        .HasColumnName("width");

                    b.HasKey("BannerId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_banner_in_category", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniBannerInCategoryDescription", b =>
                {
                    b.Property<int>("BannerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("banner_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Button")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("button");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("BannerId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_banner_in_category_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniBannerInCategoryToCategory", b =>
                {
                    b.Property<int>("BannerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("banner_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("category_id");

                    b.HasKey("BannerId", "CategoryId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "category_id")
                        .HasDatabaseName("category_id2");

                    b.ToTable("oc_uni_banner_in_category_to_category", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniBannerInCategoryToStore", b =>
                {
                    b.Property<int>("BannerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("banner_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.HasKey("BannerId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_banner_in_category_to_store", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniGallery", b =>
                {
                    b.Property<int>("GalleryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("gallery_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("GalleryId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_gallery", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniGalleryImage", b =>
                {
                    b.Property<int>("GalleryImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("gallery_image_id");

                    b.Property<int>("GalleryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("gallery_id");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("link");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.HasKey("GalleryImageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_gallery_image", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniGalleryImageDescription", b =>
                {
                    b.Property<int>("GalleryImageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("gallery_image_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<int>("GalleryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("gallery_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("title");

                    b.HasKey("GalleryImageId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_gallery_image_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniNews", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("news_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("date")
                        .HasColumnName("date_added");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("Viewed")
                        .HasColumnType("int(11)")
                        .HasColumnName("viewed");

                    b.HasKey("NewsId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_news", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniNewsDescription", b =>
                {
                    b.Property<int>("NewsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("news_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("keyword");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("meta_description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("NewsId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_news_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniNewsToStore", b =>
                {
                    b.Property<int>("NewsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("news_id");

                    b.Property<int>("StoreId")
                        .HasColumnType("int(11)")
                        .HasColumnName("store_id");

                    b.HasKey("NewsId", "StoreId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_uni_news_to_store", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUniSetting", b =>
                {
                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("mediumtext")
                        .HasColumnName("data");

                    b.ToTable("oc_uni_setting", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUnit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("unit_id");

                    b.Property<int>("Code")
                        .HasColumnType("int(11)")
                        .HasColumnName("code");

                    b.Property<string>("SymbolIntl")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("symbol_intl");

                    b.Property<string>("SymbolLetterIntl")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("symbol_letter_intl");

                    b.Property<string>("SymbolRus")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("symbol_rus");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("title");

                    b.HasKey("UnitId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_unit", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUpload", b =>
                {
                    b.Property<int>("UploadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("upload_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("filename");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("UploadId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_upload", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUrlAlias", b =>
                {
                    b.Property<int>("UrlAliasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("url_alias_id");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("keyword");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("query");

                    b.HasKey("UrlAliasId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Keyword" }, "keyword")
                        .HasDatabaseName("keyword3");

                    b.HasIndex(new[] { "Query" }, "query");

                    b.ToTable("oc_url_alias", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUrlAliasBlog", b =>
                {
                    b.Property<int>("UrlAliasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("url_alias_id");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("keyword");

                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("query");

                    b.HasKey("UrlAliasId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Keyword" }, "keyword")
                        .HasDatabaseName("keyword4");

                    b.HasIndex(new[] { "LanguageId" }, "language_id");

                    b.HasIndex(new[] { "Query" }, "query")
                        .HasDatabaseName("query1");

                    b.ToTable("oc_url_alias_blog", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("email");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("firstname");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ip");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("password");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("salt");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<int>("UserGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_group_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_user", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcUserGroup", b =>
                {
                    b.Property<int>("UserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("user_group_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("permission");

                    b.HasKey("UserGroupId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_user_group", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcVoucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("voucher_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("amount");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<string>("FromEmail")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("from_email");

                    b.Property<string>("FromName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("from_name");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("ToEmail")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)")
                        .HasColumnName("to_email");

                    b.Property<string>("ToName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("to_name");

                    b.Property<int>("VoucherThemeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("voucher_theme_id");

                    b.HasKey("VoucherId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_voucher", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcVoucherHistory", b =>
                {
                    b.Property<int>("VoucherHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("voucher_history_id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(15, 4)
                        .HasColumnType("decimal(15,4)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int(11)")
                        .HasColumnName("voucher_id");

                    b.HasKey("VoucherHistoryId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_voucher_history", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcVoucherTheme", b =>
                {
                    b.Property<int>("VoucherThemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("voucher_theme_id");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("image");

                    b.HasKey("VoucherThemeId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_voucher_theme", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcVoucherThemeDescription", b =>
                {
                    b.Property<int>("VoucherThemeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("voucher_theme_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.HasKey("VoucherThemeId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_voucher_theme_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcWeightClass", b =>
                {
                    b.Property<int>("WeightClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("weight_class_id");

                    b.Property<decimal>("Value")
                        .HasPrecision(15)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("value");

                    b.HasKey("WeightClassId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_weight_class", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcWeightClassDescription", b =>
                {
                    b.Property<int>("WeightClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("weight_class_id");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int(11)")
                        .HasColumnName("language_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("title");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("unit");

                    b.HasKey("WeightClassId", "LanguageId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_weight_class_description", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcZone", b =>
                {
                    b.Property<int>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("zone_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("code");

                    b.Property<int>("CountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("ZoneId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_zone", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.OcZoneToGeoZone", b =>
                {
                    b.Property<int>("ZoneToGeoZoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("zone_to_geo_zone_id");

                    b.Property<int>("CountryId")
                        .HasColumnType("int(11)")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime")
                        .HasColumnName("date_added");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime")
                        .HasColumnName("date_modified");

                    b.Property<int>("GeoZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("geo_zone_id");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int(11)")
                        .HasColumnName("zone_id");

                    b.HasKey("ZoneToGeoZoneId")
                        .HasName("PRIMARY");

                    b.ToTable("oc_zone_to_geo_zone", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.ProductCustomerOrder", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(96)
                        .HasColumnType("varchar(96)");

                    b.Property<string>("Артикул")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Количество")
                        .HasColumnType("int(4)");

                    b.Property<string>("НазваниеТовара")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Название товара");

                    b.Property<string>("ОтКомпании")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("От компании");

                    b.Property<string>("Статус")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<decimal?>("СуммаUah")
                        .HasPrecision(20)
                        .HasColumnType("decimal(20,2)")
                        .HasColumnName("Сумма UAH");

                    b.Property<string>("Телефон")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("ФИО")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("Ф.И.О.");

                    b.ToTable((string)null);

                    b.ToView("product_customer_order", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Gamma.ProductOrder", b =>
                {
                    b.Property<long>("КоличествоЗаказов")
                        .HasColumnType("bigint(21)")
                        .HasColumnName("Количество заказов");

                    b.Property<string>("Статус")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("ФИО")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("Ф.И.О.");

                    b.ToTable((string)null);

                    b.ToView("product_order", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
