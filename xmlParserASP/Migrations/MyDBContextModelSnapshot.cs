// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using xmlParserASP.Presistant;

#nullable disable

namespace xmlParserASP.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("xmlParserASP.Entities.AttributeRelation", b =>
                {
                    b.Property<int>("MyAttrId")
                        .HasColumnType("int");

                    b.Property<int>("SupAttrId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("MyAttrId", "SupAttrId", "SupplierId", "LanguageId");

                    b.ToTable("AttributesRelation", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.CategoryRelation", b =>
                {
                    b.Property<int>("MyCatId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierCatId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("MyCatId", "SupplierCatId", "SupplierId", "LanguageId");

                    b.ToTable("CategoriesRelation", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.MyAttribute", b =>
                {
                    b.Property<int>("MyAttrId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("MyAttrName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MyAttrId", "LanguageId");

                    b.ToTable("MyAttributes", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.MyCategory", b =>
                {
                    b.Property<int>("MyCatId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("MyCatName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MyParentCatId")
                        .HasColumnType("int");

                    b.HasKey("MyCatId", "LanguageId");

                    b.ToTable("MyCategories", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("MyCatId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("date_added")
                        .HasColumnType("longtext");

                    b.Property<string>("date_available")
                        .HasColumnType("longtext");

                    b.Property<string>("date_modified")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("image_name")
                        .HasColumnType("longtext");

                    b.Property<string>("manufacturer")
                        .HasColumnType("longtext");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("seo_keyword")
                        .HasColumnType("longtext");

                    b.Property<int?>("sku")
                        .HasColumnType("int");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ProductId", "LanguageId", "MyCatId", "SupplierId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.SupplierAttribute", b =>
                {
                    b.Property<int>("SupAttrId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("SupAttrName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("SupAttrId", "SupplierId", "LanguageId");

                    b.ToTable("SupplierAttributes", (string)null);
                });

            modelBuilder.Entity("xmlParserASP.Entities.SupplierCategory", b =>
                {
                    b.Property<int>("SupplierCatId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Cat_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ParentSupCatId")
                        .HasColumnType("int");

                    b.HasKey("SupplierCatId", "SupplierId", "LanguageId");

                    b.ToTable("SupplierCategories", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
